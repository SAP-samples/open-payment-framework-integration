{"version":3,"file":"opf-sdk.js","mappings":"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","sources":["webpack://opf-sdk/webpack/universalModuleDefinition","webpack://opf-sdk/./node_modules/loglevel/lib/loglevel.js","webpack://opf-sdk/webpack/bootstrap","webpack://opf-sdk/webpack/runtime/compat get default export","webpack://opf-sdk/webpack/runtime/define property getters","webpack://opf-sdk/webpack/runtime/hasOwnProperty shorthand","webpack://opf-sdk/webpack/runtime/make namespace object","webpack://opf-sdk/./src/core/common/lib-logger.ts","webpack://opf-sdk/./src/core/config/common.config.ts","webpack://opf-sdk/./src/core/config/callback.config.ts","webpack://opf-sdk/./src/core/data/opf-error-dialog.model.ts","webpack://opf-sdk/./node_modules/tslib/tslib.es6.mjs","webpack://opf-sdk/./node_modules/rxjs/src/internal/util/isFunction.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/util/createErrorClass.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/util/UnsubscriptionError.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/util/arrRemove.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/Subscription.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/config.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/scheduler/timeoutProvider.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/util/reportUnhandledError.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/util/noop.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/NotificationFactories.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/util/errorContext.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/Subscriber.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/symbol/observable.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/util/identity.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/Observable.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/util/pipe.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/util/argsArgArrayOrObject.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/util/isArrayLike.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/util/isPromise.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/util/isInteropObservable.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/util/isAsyncIterable.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/util/throwUnobservableError.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/symbol/iterator.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/util/isIterable.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/util/isReadableStreamLike.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/observable/innerFrom.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/util/executeSchedule.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/util/lift.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/operators/observeOn.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/operators/subscribeOn.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/scheduled/scheduleAsyncIterable.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/observable/from.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/scheduled/scheduled.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/scheduled/scheduleObservable.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/scheduled/scheduleArray.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/scheduled/schedulePromise.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/scheduled/scheduleIterable.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/scheduled/scheduleReadableStreamLike.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/operators/map.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/util/mapOneOrManyArgs.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/util/isScheduler.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/util/args.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/observable/combineLatest.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/util/createObject.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/observable/of.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/operators/mergeMap.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/operators/mergeInternals.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/operators/concatMap.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/operators/tap.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/operators/catchError.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/observable/throwError.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/observable/empty.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/scheduler/Action.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/scheduler/intervalProvider.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/scheduler/AsyncAction.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/scheduler/dateTimestampProvider.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/Scheduler.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/scheduler/async.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/observable/timer.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/util/isDate.ts","webpack://opf-sdk/./src/core/common/back-off.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/operators/retry.ts","webpack://opf-sdk/./src/core/common/constant.ts","webpack://opf-sdk/./node_modules/axios/lib/helpers/bind.js","webpack://opf-sdk/./node_modules/axios/lib/utils.js","webpack://opf-sdk/./node_modules/axios/lib/core/AxiosError.js","webpack://opf-sdk/./node_modules/axios/lib/helpers/toFormData.js","webpack://opf-sdk/./node_modules/axios/lib/helpers/AxiosURLSearchParams.js","webpack://opf-sdk/./node_modules/axios/lib/helpers/buildURL.js","webpack://opf-sdk/./node_modules/axios/lib/core/InterceptorManager.js","webpack://opf-sdk/./node_modules/axios/lib/defaults/transitional.js","webpack://opf-sdk/./node_modules/axios/lib/platform/browser/index.js","webpack://opf-sdk/./node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","webpack://opf-sdk/./node_modules/axios/lib/platform/browser/classes/FormData.js","webpack://opf-sdk/./node_modules/axios/lib/platform/browser/classes/Blob.js","webpack://opf-sdk/./node_modules/axios/lib/platform/common/utils.js","webpack://opf-sdk/./node_modules/axios/lib/platform/index.js","webpack://opf-sdk/./node_modules/axios/lib/helpers/formDataToJSON.js","webpack://opf-sdk/./node_modules/axios/lib/defaults/index.js","webpack://opf-sdk/./node_modules/axios/lib/helpers/toURLEncodedForm.js","webpack://opf-sdk/./node_modules/axios/lib/helpers/parseHeaders.js","webpack://opf-sdk/./node_modules/axios/lib/core/AxiosHeaders.js","webpack://opf-sdk/./node_modules/axios/lib/core/transformData.js","webpack://opf-sdk/./node_modules/axios/lib/cancel/isCancel.js","webpack://opf-sdk/./node_modules/axios/lib/cancel/CanceledError.js","webpack://opf-sdk/./node_modules/axios/lib/core/settle.js","webpack://opf-sdk/./node_modules/axios/lib/helpers/speedometer.js","webpack://opf-sdk/./node_modules/axios/lib/helpers/progressEventReducer.js","webpack://opf-sdk/./node_modules/axios/lib/helpers/throttle.js","webpack://opf-sdk/./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack://opf-sdk/./node_modules/axios/lib/helpers/cookies.js","webpack://opf-sdk/./node_modules/axios/lib/core/buildFullPath.js","webpack://opf-sdk/./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack://opf-sdk/./node_modules/axios/lib/helpers/combineURLs.js","webpack://opf-sdk/./node_modules/axios/lib/core/mergeConfig.js","webpack://opf-sdk/./node_modules/axios/lib/helpers/resolveConfig.js","webpack://opf-sdk/./node_modules/axios/lib/adapters/xhr.js","webpack://opf-sdk/./node_modules/axios/lib/helpers/parseProtocol.js","webpack://opf-sdk/./node_modules/axios/lib/helpers/composeSignals.js","webpack://opf-sdk/./node_modules/axios/lib/helpers/trackStream.js","webpack://opf-sdk/./node_modules/axios/lib/adapters/fetch.js","webpack://opf-sdk/./node_modules/axios/lib/adapters/adapters.js","webpack://opf-sdk/./node_modules/axios/lib/helpers/null.js","webpack://opf-sdk/./node_modules/axios/lib/core/dispatchRequest.js","webpack://opf-sdk/./node_modules/axios/lib/env/data.js","webpack://opf-sdk/./node_modules/axios/lib/helpers/validator.js","webpack://opf-sdk/./node_modules/axios/lib/core/Axios.js","webpack://opf-sdk/./node_modules/axios/lib/cancel/CancelToken.js","webpack://opf-sdk/./node_modules/axios/lib/helpers/HttpStatusCode.js","webpack://opf-sdk/./node_modules/axios/lib/axios.js","webpack://opf-sdk/./node_modules/axios/lib/helpers/spread.js","webpack://opf-sdk/./node_modules/axios/lib/helpers/isAxiosError.js","webpack://opf-sdk/./node_modules/axios/index.js","webpack://opf-sdk/./src/core/common/payment-utils.ts","webpack://opf-sdk/./src/core/common/sdk-http.util.ts","webpack://opf-sdk/./src/core/feature/submit-payment/submit-payment.service.ts","webpack://opf-sdk/./src/core/feature/submit-complete-payment/submit-complete-payment.service.ts","webpack://opf-sdk/./src/core/common/lib-info.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/util/EmptyError.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/lastValueFrom.ts","webpack://opf-sdk/./node_modules/rxjs/src/internal/operators/finalize.ts","webpack://opf-sdk/./src/core/common/opf-global.ts","webpack://opf-sdk/./src/core/opf-sdk.api.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(globalThis, () => {\nreturn ","/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n    var isIE = (typeof window !== undefinedType) && (typeof window.navigator !== undefinedType) && (\n        /Trident\\/|MSIE /.test(window.navigator.userAgent)\n    );\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    var _loggersByName = {};\n    var defaultLogger = null;\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Trace() doesn't print the message in IE, so for that case we need to wrap it\n    function traceForIE() {\n        if (console.log) {\n            if (console.log.apply) {\n                console.log.apply(console, arguments);\n            } else {\n                // In old IE, native console methods themselves don't have apply().\n                Function.prototype.apply.apply(console.log, [console, arguments]);\n            }\n        }\n        if (console.trace) console.trace();\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (methodName === 'trace' && isIE) {\n            return traceForIE;\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods() {\n        /*jshint validthis:true */\n        var level = this.getLevel();\n\n        // Replace the actual methods.\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, this.name);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n\n        // Return any important warnings.\n        if (typeof console === undefinedType && level < this.levels.SILENT) {\n            return \"No console available for logging\";\n        }\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, _level, _loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, factory) {\n      // Private instance variables.\n      var self = this;\n      /**\n       * The level inherited from a parent logger (or a global default). We\n       * cache this here rather than delegating to the parent so that it stays\n       * in sync with the actual logging methods that we have installed (the\n       * parent could change levels but we might not have rebuilt the loggers\n       * in this child yet).\n       * @type {number}\n       */\n      var inheritedLevel;\n      /**\n       * The default level for this logger, if any. If set, this overrides\n       * `inheritedLevel`.\n       * @type {number|null}\n       */\n      var defaultLevel;\n      /**\n       * A user-specific level for this logger. If set, this overrides\n       * `defaultLevel`.\n       * @type {number|null}\n       */\n      var userLevel;\n\n      var storageKey = \"loglevel\";\n      if (typeof name === \"string\") {\n        storageKey += \":\" + name;\n      } else if (typeof name === \"symbol\") {\n        storageKey = undefined;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var cookieName = encodeURIComponent(storageKey);\n                  var location = cookie.indexOf(cookieName + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(\n                          cookie.slice(location + cookieName.length + 1)\n                      )[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      function clearPersistedLevel() {\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage.removeItem(storageKey);\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC\";\n          } catch (ignore) {}\n      }\n\n      function normalizeLevel(input) {\n          var level = input;\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              return level;\n          } else {\n              throw new TypeError(\"log.setLevel() called with invalid level: \" + input);\n          }\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          if (userLevel != null) {\n            return userLevel;\n          } else if (defaultLevel != null) {\n            return defaultLevel;\n          } else {\n            return inheritedLevel;\n          }\n      };\n\n      self.setLevel = function (level, persist) {\n          userLevel = normalizeLevel(level);\n          if (persist !== false) {  // defaults to true\n              persistLevelIfPossible(userLevel);\n          }\n\n          // NOTE: in v2, this should call rebuild(), which updates children.\n          return replaceLoggingMethods.call(self);\n      };\n\n      self.setDefaultLevel = function (level) {\n          defaultLevel = normalizeLevel(level);\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.resetLevel = function () {\n          userLevel = null;\n          clearPersistedLevel();\n          replaceLoggingMethods.call(self);\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      self.rebuild = function () {\n          if (defaultLogger !== self) {\n              inheritedLevel = normalizeLevel(defaultLogger.getLevel());\n          }\n          replaceLoggingMethods.call(self);\n\n          if (defaultLogger === self) {\n              for (var childName in _loggersByName) {\n                _loggersByName[childName].rebuild();\n              }\n          }\n      };\n\n      // Initialize all the internal levels.\n      inheritedLevel = normalizeLevel(\n          defaultLogger ? defaultLogger.getLevel() : \"WARN\"\n      );\n      var initialLevel = getPersistedLevel();\n      if (initialLevel != null) {\n          userLevel = normalizeLevel(initialLevel);\n      }\n      replaceLoggingMethods.call(self);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    defaultLogger = new Logger();\n\n    defaultLogger.getLogger = function getLogger(name) {\n        if ((typeof name !== \"symbol\" && typeof name !== \"string\") || name === \"\") {\n            throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n            logger = _loggersByName[name] = new Logger(\n                name,\n                defaultLogger.methodFactory\n            );\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    // ES6 default export, for compatibility\n    defaultLogger['default'] = defaultLogger;\n\n    return defaultLogger;\n}));\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import logLevel from 'loglevel';\n\nexport class Logger {\n  private readonly _fileName: string;\n  private _debugMode: boolean = false;\n\n  constructor(fileName: string) {\n    this._fileName = fileName;\n    this._setLogLevel();\n  }\n\n  get fileName() {\n    return this._fileName;\n  }\n\n  public log(message: string) {\n    logLevel.log(this._getMessage(message));\n  }\n\n  public info(message: string) {\n    logLevel.info(this._getMessage(message));\n  }\n\n  public warn(message: string) {\n    logLevel.warn(this._getMessage(message));\n  }\n\n  public error(message: string) {\n    logLevel.error(this._getMessage(message));\n  }\n\n  public logError(error: Error) {\n    logLevel.error(error);\n  }\n\n  public setDebugMode(debugMode: boolean) {\n    this._debugMode = debugMode;\n    this._setLogLevel();\n  }\n\n  private _getMessage(message: string) {\n    return `Date: ${Date()} \\nMessage: ${message} \\nFile: ${this.fileName}`;\n  }\n\n  private _setLogLevel() {\n    if (this._debugMode) {\n      logLevel.setLevel(0);\n    } else {\n      logLevel.setLevel(3);\n    }\n  }\n}\n","import { Logger } from '../common/lib-logger';\n\nexport class CommonConfig {\n  private static readonly NAME = 'CommonConfig';\n  private readonly _logger: Logger;\n  private _baseSiteId: string | undefined;\n  private _ccv2BaseUrl: string | undefined;\n  private _opfBaseUrl: string | undefined;\n  private _commerceCloudPublicKey: string | undefined;\n  private _defaultAuthorizationErrorRetriesCount: number | undefined;\n\n  constructor() {\n    this._logger = new Logger(CommonConfig.NAME);\n  }\n\n  set baseSiteId(baseSiteId: string) {\n    this._logger.log(CommonConfig.NAME + \" > baseSiteId: \" + baseSiteId);\n    this._baseSiteId = baseSiteId;\n  }\n\n  get baseSiteId(): string | undefined {\n    return this._baseSiteId;\n  }\n\n  set ccv2BaseUrl(ccv2BaseUrl: string) {\n    this._logger.log(CommonConfig.NAME + \" > ccv2BaseUrl: \" + ccv2BaseUrl);\n    this._ccv2BaseUrl = ccv2BaseUrl;\n  }\n\n  get ccv2BaseUrl(): string | undefined {\n    return this._ccv2BaseUrl;\n  }\n\n  set opfBaseUrl(opfBaseUrl: string) {\n    this._logger.log(CommonConfig.NAME + \" > opfBaseUrl: \" + opfBaseUrl);\n    this._opfBaseUrl = opfBaseUrl;\n  }\n\n  get opfBaseUrl(): string | undefined {\n    return this._opfBaseUrl;\n  }\n\n  set commerceCloudPublicKey(commerceCloudPublicKey: string) {\n    this._logger.log(CommonConfig.NAME + \" > commerceCloudPublicKey: \" + commerceCloudPublicKey);\n    this._commerceCloudPublicKey = commerceCloudPublicKey;\n  }\n\n  get commerceCloudPublicKey(): string | undefined {\n    return this._commerceCloudPublicKey;\n  }\n\n  set defaultAuthorizationErrorRetriesCount(defaultAuthorizationErrorRetriesCount: number) {\n    this._logger.log(CommonConfig.NAME + \" > defaultAuthorizationErrorRetriesCount: \" + defaultAuthorizationErrorRetriesCount);\n    this._defaultAuthorizationErrorRetriesCount = defaultAuthorizationErrorRetriesCount;\n  }\n\n  get defaultAuthorizationErrorRetriesCount(): number | undefined {\n    return this._defaultAuthorizationErrorRetriesCount;\n  }\n\n}\n","import {\n  AccessCodeCallback,\n  CartIdCallback,\n  FailureRedirectionCallback,\n  IsUiIndicatorActive,\n  OrderPlacementCallback,\n  StartUiIndicator,\n  StopUiIndicator,\n  SuccessRedirectionCallback,\n  UserIdCallback,\n} from '../data';\nimport { Logger } from '../common/lib-logger';\n\nexport class CommonCallback {\n  private static readonly NAME = 'CommonCallback';\n  private readonly _logger: Logger;\n\n  private _accessCodeCallback: AccessCodeCallback | undefined;\n  private _orderPlacementCallback: OrderPlacementCallback | undefined;\n  private _successRedirectionCallback: SuccessRedirectionCallback | undefined;\n  private _failureRedirectionCallback: FailureRedirectionCallback | undefined;\n  private _cartIdCallback: CartIdCallback | undefined;\n  private _userIdCallback: UserIdCallback | undefined;\n  private _isUiIndicatorActive: IsUiIndicatorActive | undefined;\n  private _startUiIndicator: StartUiIndicator | undefined;\n  private _stopUiIndicator: StopUiIndicator | undefined;\n\n  constructor() {\n    this._logger = new Logger(CommonCallback.NAME);\n  }\n\n  set accessCodeCallback(accessCodeCallback: AccessCodeCallback) {\n    this._accessCodeCallback = accessCodeCallback;\n  }\n\n  get accessCodeCallback(): AccessCodeCallback | undefined {\n    return this._accessCodeCallback;\n  }\n\n  set orderPlacementCallback(orderPlacementCallback: OrderPlacementCallback) {\n    this._orderPlacementCallback = orderPlacementCallback;\n  }\n\n  get orderPlacementCallback(): OrderPlacementCallback | undefined {\n    return this._orderPlacementCallback;\n  }\n\n  set successRedirectionCallback(\n    successRedirectionCallback: SuccessRedirectionCallback\n  ) {\n    this._successRedirectionCallback = successRedirectionCallback;\n  }\n\n  get successRedirectionCallback(): SuccessRedirectionCallback | undefined {\n    return this._successRedirectionCallback;\n  }\n\n  set failureRedirectionCallback(\n    failureRedirectionCallback: FailureRedirectionCallback\n  ) {\n    this._failureRedirectionCallback = failureRedirectionCallback;\n  }\n\n  get failureRedirectionCallback(): FailureRedirectionCallback | undefined {\n    return this._failureRedirectionCallback;\n  }\n\n  set cartIdCallback(cartIdCallback: CartIdCallback) {\n    this._cartIdCallback = cartIdCallback;\n  }\n\n  get cartIdCallback(): CartIdCallback | undefined {\n    return this._cartIdCallback;\n  }\n\n  set userIdCallback(userIdCallback: UserIdCallback) {\n    this._userIdCallback = userIdCallback;\n  }\n\n  get userIdCallback(): UserIdCallback | undefined {\n    return this._userIdCallback;\n  }\n\n  set isUiIndicatorActive(isUiIndicatorActive: IsUiIndicatorActive) {\n    this._isUiIndicatorActive = isUiIndicatorActive;\n  }\n\n  get isUiIndicatorActive(): IsUiIndicatorActive | undefined {\n    return this._isUiIndicatorActive;\n  }\n\n  set startUiIndicator(startUiIndicator: StartUiIndicator) {\n    this._startUiIndicator = startUiIndicator;\n  }\n\n  get startUiIndicator(): StartUiIndicator | undefined {\n    return this._startUiIndicator;\n  }\n\n  set stopUiIndicator(stopUiIndicator: StopUiIndicator) {\n    this._stopUiIndicator = stopUiIndicator;\n  }\n\n  get stopUiIndicator(): StopUiIndicator | undefined {\n    return this._stopUiIndicator;\n  }\n}\n","export type ErrorDialogOptions = {\n  confirmString?: string;\n  confirmKey?: string;\n  confirmReplacements?: any;\n  messageString?: string;\n  messageKey?: string;\n  messageReplacements?: any;\n};\n\nexport function defaultErrorDialogOptions(): ErrorDialogOptions {\n  return {\n    messageKey: 'opfPayment.errors.proceedPayment',\n    confirmKey: 'common.continue',\n  };\n}\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","/**\n * Returns true if the object is a function.\n * @param value The value to check\n */\nexport function isFunction(value: any): value is (...args: any[]) => any {\n  return typeof value === 'function';\n}\n","/**\n * Used to create Error subclasses until the community moves away from ES5.\n *\n * This is because compiling from TypeScript down to ES5 has issues with subclassing Errors\n * as well as other built-in types: https://github.com/Microsoft/TypeScript/issues/12123\n *\n * @param createImpl A factory function to create the actual constructor implementation. The returned\n * function should be a named function that calls `_super` internally.\n */\nexport function createErrorClass<T>(createImpl: (_super: any) => any): T {\n  const _super = (instance: any) => {\n    Error.call(instance);\n    instance.stack = new Error().stack;\n  };\n\n  const ctorFunc = createImpl(_super);\n  ctorFunc.prototype = Object.create(Error.prototype);\n  ctorFunc.prototype.constructor = ctorFunc;\n  return ctorFunc;\n}\n","import { createErrorClass } from './createErrorClass';\n\nexport interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (errors: any[]): UnsubscriptionError;\n}\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = createErrorClass(\n  (_super) =>\n    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {\n      _super(this);\n      this.message = errors\n        ? `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}`\n        : '';\n      this.name = 'UnsubscriptionError';\n      this.errors = errors;\n    }\n);\n","/**\n * Removes an item from an array, mutating it.\n * @param arr The array to remove the item from\n * @param item The item to remove\n */\nexport function arrRemove<T>(arr: T[] | undefined | null, item: T) {\n  if (arr) {\n    const index = arr.indexOf(item);\n    0 <= index && arr.splice(index, 1);\n  }\n}\n","import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic, Unsubscribable } from './types';\nimport { arrRemove } from './util/arrRemove';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY = (() => {\n    const empty = new Subscription();\n    empty.closed = true;\n    return empty;\n  })();\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   */\n  public closed = false;\n\n  private _parentage: Subscription[] | Subscription | null = null;\n\n  /**\n   * The list of registered finalizers to execute upon unsubscription. Adding and removing from this\n   * list occurs in the {@link #add} and {@link #remove} methods.\n   */\n  private _finalizers: Exclude<TeardownLogic, void>[] | null = null;\n\n  /**\n   * @param initialTeardown A function executed first as part of the finalization\n   * process that is kicked off when {@link #unsubscribe} is called.\n   */\n  constructor(private initialTeardown?: () => void) {}\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[] | undefined;\n\n    if (!this.closed) {\n      this.closed = true;\n\n      // Remove this from it's parents.\n      const { _parentage } = this;\n      if (_parentage) {\n        this._parentage = null;\n        if (Array.isArray(_parentage)) {\n          for (const parent of _parentage) {\n            parent.remove(this);\n          }\n        } else {\n          _parentage.remove(this);\n        }\n      }\n\n      const { initialTeardown: initialFinalizer } = this;\n      if (isFunction(initialFinalizer)) {\n        try {\n          initialFinalizer();\n        } catch (e) {\n          errors = e instanceof UnsubscriptionError ? e.errors : [e];\n        }\n      }\n\n      const { _finalizers } = this;\n      if (_finalizers) {\n        this._finalizers = null;\n        for (const finalizer of _finalizers) {\n          try {\n            execFinalizer(finalizer);\n          } catch (err) {\n            errors = errors ?? [];\n            if (err instanceof UnsubscriptionError) {\n              errors = [...errors, ...err.errors];\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n\n      if (errors) {\n        throw new UnsubscriptionError(errors);\n      }\n    }\n  }\n\n  /**\n   * Adds a finalizer to this subscription, so that finalization will be unsubscribed/called\n   * when this subscription is unsubscribed. If this subscription is already {@link #closed},\n   * because it has already been unsubscribed, then whatever finalizer is passed to it\n   * will automatically be executed (unless the finalizer itself is also a closed subscription).\n   *\n   * Closed Subscriptions cannot be added as finalizers to any subscription. Adding a closed\n   * subscription to a any subscription will result in no operation. (A noop).\n   *\n   * Adding a subscription to itself, or adding `null` or `undefined` will not perform any\n   * operation at all. (A noop).\n   *\n   * `Subscription` instances that are added to this instance will automatically remove themselves\n   * if they are unsubscribed. Functions and {@link Unsubscribable} objects that you wish to remove\n   * will need to be removed manually with {@link #remove}\n   *\n   * @param teardown The finalization logic to add to this subscription.\n   */\n  add(teardown: TeardownLogic): void {\n    // Only add the finalizer if it's not undefined\n    // and don't add a subscription to itself.\n    if (teardown && teardown !== this) {\n      if (this.closed) {\n        // If this subscription is already closed,\n        // execute whatever finalizer is handed to it automatically.\n        execFinalizer(teardown);\n      } else {\n        if (teardown instanceof Subscription) {\n          // We don't add closed subscriptions, and we don't add the same subscription\n          // twice. Subscription unsubscribe is idempotent.\n          if (teardown.closed || teardown._hasParent(this)) {\n            return;\n          }\n          teardown._addParent(this);\n        }\n        (this._finalizers = this._finalizers ?? []).push(teardown);\n      }\n    }\n  }\n\n  /**\n   * Checks to see if a this subscription already has a particular parent.\n   * This will signal that this subscription has already been added to the parent in question.\n   * @param parent the parent to check for\n   */\n  private _hasParent(parent: Subscription) {\n    const { _parentage } = this;\n    return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n  }\n\n  /**\n   * Adds a parent to this subscription so it can be removed from the parent if it\n   * unsubscribes on it's own.\n   *\n   * NOTE: THIS ASSUMES THAT {@link _hasParent} HAS ALREADY BEEN CHECKED.\n   * @param parent The parent subscription to add\n   */\n  private _addParent(parent: Subscription) {\n    const { _parentage } = this;\n    this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n  }\n\n  /**\n   * Called on a child when it is removed via {@link #remove}.\n   * @param parent The parent to remove\n   */\n  private _removeParent(parent: Subscription) {\n    const { _parentage } = this;\n    if (_parentage === parent) {\n      this._parentage = null;\n    } else if (Array.isArray(_parentage)) {\n      arrRemove(_parentage, parent);\n    }\n  }\n\n  /**\n   * Removes a finalizer from this subscription that was previously added with the {@link #add} method.\n   *\n   * Note that `Subscription` instances, when unsubscribed, will automatically remove themselves\n   * from every other `Subscription` they have been added to. This means that using the `remove` method\n   * is not a common thing and should be used thoughtfully.\n   *\n   * If you add the same finalizer instance of a function or an unsubscribable object to a `Subscription` instance\n   * more than once, you will need to call `remove` the same number of times to remove all instances.\n   *\n   * All finalizer instances are removed to free up memory upon unsubscription.\n   *\n   * @param teardown The finalizer to remove from this subscription\n   */\n  remove(teardown: Exclude<TeardownLogic, void>): void {\n    const { _finalizers } = this;\n    _finalizers && arrRemove(_finalizers, teardown);\n\n    if (teardown instanceof Subscription) {\n      teardown._removeParent(this);\n    }\n  }\n}\n\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\n\nexport function isSubscription(value: any): value is Subscription {\n  return (\n    value instanceof Subscription ||\n    (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe))\n  );\n}\n\nfunction execFinalizer(finalizer: Unsubscribable | (() => void)) {\n  if (isFunction(finalizer)) {\n    finalizer();\n  } else {\n    finalizer.unsubscribe();\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { ObservableNotification } from './types';\n\n/**\n * The {@link GlobalConfig} object for RxJS. It is used to configure things\n * like how to react on unhandled errors.\n */\nexport const config: GlobalConfig = {\n  onUnhandledError: null,\n  onStoppedNotification: null,\n  Promise: undefined,\n  useDeprecatedSynchronousErrorHandling: false,\n  useDeprecatedNextContext: false,\n};\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like how to react on unhandled errors. Accessible via {@link config}\n * object.\n */\nexport interface GlobalConfig {\n  /**\n   * A registration point for unhandled errors from RxJS. These are errors that\n   * cannot were not handled by consuming code in the usual subscription path. For\n   * example, if you have this configured, and you subscribe to an observable without\n   * providing an error handler, errors from that subscription will end up here. This\n   * will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onUnhandledError: ((err: any) => void) | null;\n\n  /**\n   * A registration point for notifications that cannot be sent to subscribers because they\n   * have completed, errored or have been explicitly unsubscribed. By default, next, complete\n   * and error notifications sent to stopped subscribers are noops. However, sometimes callers\n   * might want a different behavior. For example, with sources that attempt to report errors\n   * to stopped subscribers, a caller can configure RxJS to throw an unhandled error instead.\n   * This will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onStoppedNotification: ((notification: ObservableNotification<any>, subscriber: Subscriber<any>) => void) | null;\n\n  /**\n   * The promise constructor used by default for {@link Observable#toPromise toPromise} and {@link Observable#forEach forEach}\n   * methods.\n   *\n   * @deprecated As of version 8, RxJS will no longer support this sort of injection of a\n   * Promise constructor. If you need a Promise implementation other than native promises,\n   * please polyfill/patch Promise as you see appropriate. Will be removed in v8.\n   */\n  Promise?: PromiseConstructorLike;\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BUY TIME\n   * FOR MIGRATION REASONS.\n   *\n   * @deprecated As of version 8, RxJS will no longer support synchronous throwing\n   * of unhandled errors. All errors will be thrown on a separate call stack to prevent bad\n   * behaviors described above. Will be removed in v8.\n   */\n  useDeprecatedSynchronousErrorHandling: boolean;\n\n  /**\n   * If true, enables an as-of-yet undocumented feature from v5: The ability to access\n   * `unsubscribe()` via `this` context in `next` functions created in observers passed\n   * to `subscribe`.\n   *\n   * This is being removed because the performance was severely problematic, and it could also cause\n   * issues when types other than POJOs are passed to subscribe as subscribers, as they will likely have\n   * their `this` context overwritten.\n   *\n   * @deprecated As of version 8, RxJS will no longer support altering the\n   * context of next functions provided as part of an observer to Subscribe. Instead,\n   * you will have access to a subscription or a signal or token that will allow you to do things like\n   * unsubscribe and test closed status. Will be removed in v8.\n   */\n  useDeprecatedNextContext: boolean;\n}\n","import type { TimerHandle } from './timerHandle';\ntype SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearTimeoutFunction = (handle: TimerHandle) => void;\n\ninterface TimeoutProvider {\n  setTimeout: SetTimeoutFunction;\n  clearTimeout: ClearTimeoutFunction;\n  delegate:\n    | {\n        setTimeout: SetTimeoutFunction;\n        clearTimeout: ClearTimeoutFunction;\n      }\n    | undefined;\n}\n\nexport const timeoutProvider: TimeoutProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setTimeout(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = timeoutProvider;\n    if (delegate?.setTimeout) {\n      return delegate.setTimeout(handler, timeout, ...args);\n    }\n    return setTimeout(handler, timeout, ...args);\n  },\n  clearTimeout(handle) {\n    const { delegate } = timeoutProvider;\n    return (delegate?.clearTimeout || clearTimeout)(handle as any);\n  },\n  delegate: undefined,\n};\n","import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\n\n/**\n * Handles an error on another job either with the user-configured {@link onUnhandledError},\n * or by throwing it on that new job so it can be picked up by `window.onerror`, `process.on('error')`, etc.\n *\n * This should be called whenever there is an error that is out-of-band with the subscription\n * or when an error hits a terminal boundary of the subscription and no error handler was provided.\n *\n * @param err the error to report\n */\nexport function reportUnhandledError(err: any) {\n  timeoutProvider.setTimeout(() => {\n    const { onUnhandledError } = config;\n    if (onUnhandledError) {\n      // Execute the user-configured error handler.\n      onUnhandledError(err);\n    } else {\n      // Throw so it is picked up by the runtime's uncaught error mechanism.\n      throw err;\n    }\n  });\n}\n","/* tslint:disable:no-empty */\nexport function noop() { }\n","import { CompleteNotification, NextNotification, ErrorNotification } from './types';\n\n/**\n * A completion object optimized for memory use and created to be the\n * same \"shape\" as other notifications in v8.\n * @internal\n */\nexport const COMPLETE_NOTIFICATION = (() => createNotification('C', undefined, undefined) as CompleteNotification)();\n\n/**\n * Internal use only. Creates an optimized error notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function errorNotification(error: any): ErrorNotification {\n  return createNotification('E', undefined, error) as any;\n}\n\n/**\n * Internal use only. Creates an optimized next notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function nextNotification<T>(value: T) {\n  return createNotification('N', value, undefined) as NextNotification<T>;\n}\n\n/**\n * Ensures that all notifications created internally have the same \"shape\" in v8.\n *\n * TODO: This is only exported to support a crazy legacy test in `groupBy`.\n * @internal\n */\nexport function createNotification(kind: 'N' | 'E' | 'C', value: any, error: any) {\n  return {\n    kind,\n    value,\n    error,\n  };\n}\n","import { config } from '../config';\n\nlet context: { errorThrown: boolean; error: any } | null = null;\n\n/**\n * Handles dealing with errors for super-gross mode. Creates a context, in which\n * any synchronously thrown errors will be passed to {@link captureError}. Which\n * will record the error such that it will be rethrown after the call back is complete.\n * TODO: Remove in v8\n * @param cb An immediately executed function.\n */\nexport function errorContext(cb: () => void) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    const isRoot = !context;\n    if (isRoot) {\n      context = { errorThrown: false, error: null };\n    }\n    cb();\n    if (isRoot) {\n      const { errorThrown, error } = context!;\n      context = null;\n      if (errorThrown) {\n        throw error;\n      }\n    }\n  } else {\n    // This is the general non-deprecated path for everyone that\n    // isn't crazy enough to use super-gross mode (useDeprecatedSynchronousErrorHandling)\n    cb();\n  }\n}\n\n/**\n * Captures errors only in super-gross mode.\n * @param err the error to capture\n */\nexport function captureError(err: any) {\n  if (config.useDeprecatedSynchronousErrorHandling && context) {\n    context.errorThrown = true;\n    context.error = err;\n  }\n}\n","import { isFunction } from './util/isFunction';\nimport { Observer, ObservableNotification } from './types';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param next The `next` callback of an Observer.\n   * @param error The `error` callback of an\n   * Observer.\n   * @param complete The `complete` callback of an\n   * Observer.\n   * @return A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   * @deprecated Do not use. Will be removed in v8. There is no replacement for this\n   * method, and there is no reason to be creating instances of `Subscriber` directly.\n   * If you have a specific use case, please file an issue.\n   */\n  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {\n    return new SafeSubscriber(next, error, complete);\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected isStopped: boolean = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected destination: Subscriber<any> | Observer<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * There is no reason to directly create an instance of Subscriber. This type is exported for typings reasons.\n   */\n  constructor(destination?: Subscriber<any> | Observer<any>) {\n    super();\n    if (destination) {\n      this.destination = destination;\n      // Automatically chain subscriptions together here.\n      // if destination is a Subscription, then it is a Subscriber.\n      if (isSubscription(destination)) {\n        destination.add(this);\n      }\n    } else {\n      this.destination = EMPTY_OBSERVER;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (this.isStopped) {\n      handleStoppedNotification(nextNotification(value), this);\n    } else {\n      this._next(value!);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (this.isStopped) {\n      handleStoppedNotification(errorNotification(err), this);\n    } else {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (this.isStopped) {\n      handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n    } else {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (!this.closed) {\n      this.isStopped = true;\n      super.unsubscribe();\n      this.destination = null!;\n    }\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    try {\n      this.destination.error(err);\n    } finally {\n      this.unsubscribe();\n    }\n  }\n\n  protected _complete(): void {\n    try {\n      this.destination.complete();\n    } finally {\n      this.unsubscribe();\n    }\n  }\n}\n\n/**\n * This bind is captured here because we want to be able to have\n * compatibility with monoid libraries that tend to use a method named\n * `bind`. In particular, a library called Monio requires this.\n */\nconst _bind = Function.prototype.bind;\n\nfunction bind<Fn extends (...args: any[]) => any>(fn: Fn, thisArg: any): Fn {\n  return _bind.call(fn, thisArg);\n}\n\n/**\n * Internal optimization only, DO NOT EXPOSE.\n * @internal\n */\nclass ConsumerObserver<T> implements Observer<T> {\n  constructor(private partialObserver: Partial<Observer<T>>) {}\n\n  next(value: T): void {\n    const { partialObserver } = this;\n    if (partialObserver.next) {\n      try {\n        partialObserver.next(value);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n\n  error(err: any): void {\n    const { partialObserver } = this;\n    if (partialObserver.error) {\n      try {\n        partialObserver.error(err);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    } else {\n      handleUnhandledError(err);\n    }\n  }\n\n  complete(): void {\n    const { partialObserver } = this;\n    if (partialObserver.complete) {\n      try {\n        partialObserver.complete();\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n}\n\nexport class SafeSubscriber<T> extends Subscriber<T> {\n  constructor(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((e?: any) => void) | null,\n    complete?: (() => void) | null\n  ) {\n    super();\n\n    let partialObserver: Partial<Observer<T>>;\n    if (isFunction(observerOrNext) || !observerOrNext) {\n      // The first argument is a function, not an observer. The next\n      // two arguments *could* be observers, or they could be empty.\n      partialObserver = {\n        next: (observerOrNext ?? undefined) as (((value: T) => void) | undefined),\n        error: error ?? undefined,\n        complete: complete ?? undefined,\n      };\n    } else {\n      // The first argument is a partial observer.\n      let context: any;\n      if (this && config.useDeprecatedNextContext) {\n        // This is a deprecated path that made `this.unsubscribe()` available in\n        // next handler functions passed to subscribe. This only exists behind a flag\n        // now, as it is *very* slow.\n        context = Object.create(observerOrNext);\n        context.unsubscribe = () => this.unsubscribe();\n        partialObserver = {\n          next: observerOrNext.next && bind(observerOrNext.next, context),\n          error: observerOrNext.error && bind(observerOrNext.error, context),\n          complete: observerOrNext.complete && bind(observerOrNext.complete, context),\n        };\n      } else {\n        // The \"normal\" path. Just use the partial observer directly.\n        partialObserver = observerOrNext;\n      }\n    }\n\n    // Wrap the partial observer to ensure it's a full observer, and\n    // make sure proper error handling is accounted for.\n    this.destination = new ConsumerObserver(partialObserver);\n  }\n}\n\nfunction handleUnhandledError(error: any) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    captureError(error);\n  } else {\n    // Ideal path, we report this as an unhandled error,\n    // which is thrown on a new call stack.\n    reportUnhandledError(error);\n  }\n}\n\n/**\n * An error handler used when no error handler was supplied\n * to the SafeSubscriber -- meaning no error handler was supplied\n * do the `subscribe` call on our observable.\n * @param err The error to handle\n */\nfunction defaultErrorHandler(err: any) {\n  throw err;\n}\n\n/**\n * A handler for notifications that cannot be sent to a stopped subscriber.\n * @param notification The notification being sent\n * @param subscriber The stopped subscriber\n */\nfunction handleStoppedNotification(notification: ObservableNotification<any>, subscriber: Subscriber<any>) {\n  const { onStoppedNotification } = config;\n  onStoppedNotification && timeoutProvider.setTimeout(() => onStoppedNotification(notification, subscriber));\n}\n\n/**\n * The observer used as a stub for subscriptions where the user did not\n * pass any arguments to `subscribe`. Comes with the default error handling\n * behavior.\n */\nexport const EMPTY_OBSERVER: Readonly<Observer<any>> & { closed: true } = {\n  closed: true,\n  next: noop,\n  error: defaultErrorHandler,\n  complete: noop,\n};\n","/**\n * Symbol.observable or a string \"@@observable\". Used for interop\n *\n * @deprecated We will no longer be exporting this symbol in upcoming versions of RxJS.\n * Instead polyfill and use Symbol.observable directly *or* use https://www.npmjs.com/package/symbol-observable\n */\nexport const observable: string | symbol = (() => (typeof Symbol === 'function' && Symbol.observable) || '@@observable')();\n","/**\n * This function takes one parameter and just returns it. Simply put,\n * this is like `<T>(x: T): T => x`.\n *\n * ## Examples\n *\n * This is useful in some cases when using things like `mergeMap`\n *\n * ```ts\n * import { interval, take, map, range, mergeMap, identity } from 'rxjs';\n *\n * const source$ = interval(1000).pipe(take(5));\n *\n * const result$ = source$.pipe(\n *   map(i => range(i)),\n *   mergeMap(identity) // same as mergeMap(x => x)\n * );\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * Or when you want to selectively apply an operator\n *\n * ```ts\n * import { interval, take, identity } from 'rxjs';\n *\n * const shouldLimit = () => Math.random() < 0.5;\n *\n * const source$ = interval(1000);\n *\n * const result$ = source$.pipe(shouldLimit() ? take(5) : identity);\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * @param x Any value that is returned by this function\n * @returns The value passed as the first parameter to this function\n */\nexport function identity<T>(x: T): T {\n  return x;\n}\n","import { Operator } from './Operator';\nimport { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription, Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, Subscribable, Observer } from './types';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  source: Observable<any> | undefined;\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  operator: Operator<any, T> | undefined;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new Observable by calling the Observable constructor\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new observable\n   * @nocollapse\n   * @deprecated Use `new Observable()` instead. Will be removed in v8.\n   */\n  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  };\n\n  /**\n   * Creates a new Observable, with this Observable instance as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param operator the operator defining the operation to take on the observable\n   * @return a new observable with the Operator applied\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * If you have implemented an operator using `lift`, it is recommended that you create an\n   * operator by simply returning `new Observable()` directly. See \"Creating new operators from\n   * scratch\" section here: https://rxjs.dev/guide/operators\n   */\n  lift<R>(operator?: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observerOrNext?: Partial<Observer<T>> | ((value: T) => void)): Subscription;\n  /** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\n  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular, do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided and an error happens,\n   * it will be thrown asynchronously. Errors thrown asynchronously cannot be caught using `try`/`catch`. Instead,\n   * use the {@link onUnhandledError} configuration option or use a runtime handler (like `window.onerror` or\n   * `process.on('error)`) to be notified of unhandled errors. Because of this, it's recommended that you provide\n   * an `error` method to avoid missing thrown errors.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of an Observer,\n   * if you do not need to listen for something, you can omit a function by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to the `error` function, as with an Observer, if not provided, errors emitted by an Observable will be thrown asynchronously.\n   *\n   * You can, however, subscribe with no parameters at all. This may be the case where you're not interested in terminal events\n   * and you also handled emissions internally by using operators (e.g. using `tap`).\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * #### Examples\n   *\n   * Subscribe with an {@link guide/observer Observer}\n   *\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Subscribe with functions ({@link deprecations/subscribe-arguments deprecated})\n   *\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Cancel a subscription\n   *\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe({\n   *   next(num) {\n   *     console.log(num)\n   *   },\n   *   complete() {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * });\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // 'unsubscribed!' after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   * or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   * Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   * the error will be thrown asynchronously as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {Subscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((error: any) => void) | null,\n    complete?: (() => void) | null\n  ): Subscription {\n    const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n\n    errorContext(() => {\n      const { operator, source } = this;\n      subscriber.add(\n        operator\n          ? // We're dealing with a subscription in the\n            // operator chain to one of our lifted operators.\n            operator.call(subscriber, source)\n          : source\n          ? // If `source` has a value, but `operator` does not, something that\n            // had intimate knowledge of our API, like our `Subject`, must have\n            // set it. We're going to just call `_subscribe` directly.\n            this._subscribe(subscriber)\n          : // In all other cases, we're likely wrapping a user-provided initializer\n            // function, so we need to catch errors and handle them appropriately.\n            this._trySubscribe(subscriber)\n      );\n    });\n\n    return subscriber;\n  }\n\n  /** @internal */\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      // We don't need to return anything in this case,\n      // because it's just going to try to `add()` to a subscription\n      // above.\n      sink.error(err);\n    }\n  }\n\n  /**\n   * Used as a NON-CANCELLABLE means of subscribing to an observable, for use with\n   * APIs that expect promises, like `async/await`. You cannot unsubscribe from this.\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * #### Example\n   *\n   * ```ts\n   * import { interval, take } from 'rxjs';\n   *\n   * const source$ = interval(1000).pipe(take(4));\n   *\n   * async function getTotal() {\n   *   let total = 0;\n   *\n   *   await source$.forEach(value => {\n   *     total += value;\n   *     console.log('observable -> ' + value);\n   *   });\n   *\n   *   return total;\n   * }\n   *\n   * getTotal().then(\n   *   total => console.log('Total: ' + total)\n   * );\n   *\n   * // Expected:\n   * // 'observable -> 0'\n   * // 'observable -> 1'\n   * // 'observable -> 2'\n   * // 'observable -> 3'\n   * // 'Total: 6'\n   * ```\n   *\n   * @param next a handler for each value emitted by the observable\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void): Promise<void>;\n\n  /**\n   * @param next a handler for each value emitted by the observable\n   * @param promiseCtor a constructor function used to instantiate the Promise\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   * @deprecated Passing a Promise constructor will no longer be available\n   * in upcoming versions of RxJS. This is because it adds weight to the library, for very\n   * little benefit. If you need this functionality, it is recommended that you either\n   * polyfill Promise, or you create an adapter to convert the returned native promise\n   * to whatever promise implementation you wanted. Will be removed in v8.\n   */\n  forEach(next: (value: T) => void, promiseCtor: PromiseConstructorLike): Promise<void>;\n\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      const subscriber = new SafeSubscriber<T>({\n        next: (value) => {\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscriber.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve,\n      });\n      this.subscribe(subscriber);\n    }) as Promise<void>;\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source?.subscribe(subscriber);\n  }\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>\n  ): Observable<D>;\n  pipe<A, B, C, D, E>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>\n  ): Observable<E>;\n  pipe<A, B, C, D, E, F>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>\n  ): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>\n  ): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>\n  ): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>\n  ): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>,\n    ...operations: OperatorFunction<any, any>[]\n  ): Observable<unknown>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ## Example\n   *\n   * ```ts\n   * import { interval, filter, map, scan } from 'rxjs';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x));\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: typeof Promise): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: PromiseConstructorLike): Promise<T | undefined>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Subscribe to this Observable and get a Promise resolving on\n   * `complete` with the last emission (if any).\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * @method toPromise\n   * @param [promiseCtor] a constructor function used to instantiate\n   * the Promise\n   * @return A Promise that resolves with the last value emit, or\n   * rejects on an error. If there were no emissions, Promise\n   * resolves with undefined.\n   * @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise\n   */\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T | undefined> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: T | undefined;\n      this.subscribe(\n        (x: T) => (value = x),\n        (err: any) => reject(err),\n        () => resolve(value)\n      );\n    }) as Promise<T | undefined>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  return promiseCtor ?? config.Promise ?? Promise;\n}\n\nfunction isObserver<T>(value: any): value is Observer<T> {\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\n\nfunction isSubscriber<T>(value: any): value is Subscriber<T> {\n  return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n","import { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\nexport function pipe(): typeof identity;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>\n): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>\n): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>\n): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>\n): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>\n): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>\n): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>,\n  ...fns: UnaryFunction<any, any>[]\n): UnaryFunction<T, unknown>;\n\n/**\n * pipe() can be called on one or more functions, each of which can take one argument (\"UnaryFunction\")\n * and uses it to return a value.\n * It returns a function that takes one argument, passes it to the first UnaryFunction, and then\n * passes the result to the next one, passes that result to the next one, and so on.  \n */\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","const { isArray } = Array;\nconst { getPrototypeOf, prototype: objectProto, keys: getKeys } = Object;\n\n/**\n * Used in functions where either a list of arguments, a single array of arguments, or a\n * dictionary of arguments can be returned. Returns an object with an `args` property with\n * the arguments in an array, if it is a dictionary, it will also return the `keys` in another\n * property.\n */\nexport function argsArgArrayOrObject<T, O extends Record<string, T>>(args: T[] | [O] | [T[]]): { args: T[]; keys: string[] | null } {\n  if (args.length === 1) {\n    const first = args[0];\n    if (isArray(first)) {\n      return { args: first, keys: null };\n    }\n    if (isPOJO(first)) {\n      const keys = getKeys(first);\n      return {\n        args: keys.map((key) => first[key]),\n        keys,\n      };\n    }\n  }\n\n  return { args: args as T[], keys: null };\n}\n\nfunction isPOJO(obj: any): obj is object {\n  return obj && typeof obj === 'object' && getPrototypeOf(obj) === objectProto;\n}\n","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');","import { isFunction } from \"./isFunction\";\n\n/**\n * Tests to see if the object is \"thennable\".\n * @param value the object to test\n */\nexport function isPromise(value: any): value is PromiseLike<any> {\n  return isFunction(value?.then);\n}\n","import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return isFunction(input[Symbol_observable]);\n}\n","import { isFunction } from './isFunction';\n\nexport function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T> {\n  return Symbol.asyncIterator && isFunction(obj?.[Symbol.asyncIterator]);\n}\n","/**\n * Creates the TypeError to throw if an invalid object is passed to `from` or `scheduled`.\n * @param input The object that was passed.\n */\nexport function createInvalidObservableTypeError(input: any) {\n  // TODO: We should create error codes that can be looked up, so this can be less verbose.\n  return new TypeError(\n    `You provided ${\n      input !== null && typeof input === 'object' ? 'an invalid object' : `'${input}'`\n    } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`\n  );\n}\n","export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n","import { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return isFunction(input?.[Symbol_iterator]);\n}\n","import { ReadableStreamLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport async function* readableStreamLikeToAsyncGenerator<T>(readableStream: ReadableStreamLike<T>): AsyncGenerator<T> {\n  const reader = readableStream.getReader();\n  try {\n    while (true) {\n      const { value, done } = await reader.read();\n      if (done) {\n        return;\n      }\n      yield value!;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nexport function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T> {\n  // We don't want to use instanceof checks because they would return\n  // false for instances from another Realm, like an <iframe>.\n  return isFunction(obj?.getReader);\n}\n","import { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { ObservableInput, ObservedValueOf, ReadableStreamLike } from '../types';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { Subscriber } from '../Subscriber';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\nexport function innerFrom<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\nexport function innerFrom<T>(input: ObservableInput<T>): Observable<T> {\n  if (input instanceof Observable) {\n    return input;\n  }\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return fromInteropObservable(input);\n    }\n    if (isArrayLike(input)) {\n      return fromArrayLike(input);\n    }\n    if (isPromise(input)) {\n      return fromPromise(input);\n    }\n    if (isAsyncIterable(input)) {\n      return fromAsyncIterable(input);\n    }\n    if (isIterable(input)) {\n      return fromIterable(input);\n    }\n    if (isReadableStreamLike(input)) {\n      return fromReadableStreamLike(input);\n    }\n  }\n\n  throw createInvalidObservableTypeError(input);\n}\n\n/**\n * Creates an RxJS Observable from an object that implements `Symbol.observable`.\n * @param obj An object that properly implements `Symbol.observable`.\n */\nexport function fromInteropObservable<T>(obj: any) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    const obs = obj[Symbol_observable]();\n    if (isFunction(obs.subscribe)) {\n      return obs.subscribe(subscriber);\n    }\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  });\n}\n\n/**\n * Synchronously emits the values of an array like and completes.\n * This is exported because there are creation functions and operators that need to\n * make direct use of the same logic, and there's no reason to make them run through\n * `from` conditionals because we *know* they're dealing with an array.\n * @param array The array to emit values from\n */\nexport function fromArrayLike<T>(array: ArrayLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    // Loop over the array and emit each value. Note two things here:\n    // 1. We're making sure that the subscriber is not closed on each loop.\n    //    This is so we don't continue looping over a very large array after\n    //    something like a `take`, `takeWhile`, or other synchronous unsubscription\n    //    has already unsubscribed.\n    // 2. In this form, reentrant code can alter that array we're looping over.\n    //    This is a known issue, but considered an edge case. The alternative would\n    //    be to copy the array before executing the loop, but this has\n    //    performance implications.\n    for (let i = 0; i < array.length && !subscriber.closed; i++) {\n      subscriber.next(array[i]);\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromPromise<T>(promise: PromiseLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    promise\n      .then(\n        (value) => {\n          if (!subscriber.closed) {\n            subscriber.next(value);\n            subscriber.complete();\n          }\n        },\n        (err: any) => subscriber.error(err)\n      )\n      .then(null, reportUnhandledError);\n  });\n}\n\nexport function fromIterable<T>(iterable: Iterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    for (const value of iterable) {\n      subscriber.next(value);\n      if (subscriber.closed) {\n        return;\n      }\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromAsyncIterable<T>(asyncIterable: AsyncIterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    process(asyncIterable, subscriber).catch((err) => subscriber.error(err));\n  });\n}\n\nexport function fromReadableStreamLike<T>(readableStream: ReadableStreamLike<T>) {\n  return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\n\nasync function process<T>(asyncIterable: AsyncIterable<T>, subscriber: Subscriber<T>) {\n  for await (const value of asyncIterable) {\n    subscriber.next(value);\n    // A side-effect may have closed our subscriber,\n    // check before the next iteration.\n    if (subscriber.closed) {\n      return;\n    }\n  }\n  subscriber.complete();\n}\n","import { Subscription } from '../Subscription';\nimport { SchedulerAction, SchedulerLike } from '../types';\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay: number,\n  repeat: true\n): void;\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay?: number,\n  repeat?: false\n): Subscription;\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay = 0,\n  repeat = false\n): Subscription | void {\n  const scheduleSubscription = scheduler.schedule(function (this: SchedulerAction<any>) {\n    work();\n    if (repeat) {\n      parentSubscription.add(this.schedule(null, delay));\n    } else {\n      this.unsubscribe();\n    }\n  }, delay);\n\n  parentSubscription.add(scheduleSubscription);\n\n  if (!repeat) {\n    // Because user-land scheduler implementations are unlikely to properly reuse\n    // Actions for repeat scheduling, we can't trust that the returned subscription\n    // will control repeat subscription scenarios. So we're trying to avoid using them\n    // incorrectly within this library.\n    return scheduleSubscription;\n  }\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\nimport { isFunction } from './isFunction';\n\n/**\n * Used to determine if an object is an Observable with a lift function.\n */\nexport function hasLift(source: any): source is { lift: InstanceType<typeof Observable>['lift'] } {\n  return isFunction(source?.lift);\n}\n\n/**\n * Creates an `OperatorFunction`. Used to define operators throughout the library in a concise way.\n * @param init The logic to connect the liftedSource to the subscriber at the moment of subscription.\n */\nexport function operate<T, R>(\n  init: (liftedSource: Observable<T>, subscriber: Subscriber<R>) => (() => void) | void\n): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    if (hasLift(source)) {\n      return source.lift(function (this: Subscriber<R>, liftedSource: Observable<T>) {\n        try {\n          return init(liftedSource, this);\n        } catch (err) {\n          this.error(err);\n        }\n      });\n    }\n    throw new TypeError('Unable to lift unknown Observable type');\n  };\n}\n","import { Subscriber } from '../Subscriber';\n\n/**\n * Creates an instance of an `OperatorSubscriber`.\n * @param destination The downstream subscriber.\n * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n * and send to the `destination` error handler.\n * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n * this handler are sent to the `destination` error handler.\n * @param onFinalize Additional teardown logic here. This will only be called on teardown if the\n * subscriber itself is not already closed. This is called after all other teardown logic is executed.\n */\nexport function createOperatorSubscriber<T>(\n  destination: Subscriber<any>,\n  onNext?: (value: T) => void,\n  onComplete?: () => void,\n  onError?: (err: any) => void,\n  onFinalize?: () => void\n): Subscriber<T> {\n  return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\n\n/**\n * A generic helper for allowing operators to be created with a Subscriber and\n * use closures to capture necessary state from the operator function itself.\n */\nexport class OperatorSubscriber<T> extends Subscriber<T> {\n  /**\n   * Creates an instance of an `OperatorSubscriber`.\n   * @param destination The downstream subscriber.\n   * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n   * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n   * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n   * and send to the `destination` error handler.\n   * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n   * this handler are sent to the `destination` error handler.\n   * @param onFinalize Additional finalization logic here. This will only be called on finalization if the\n   * subscriber itself is not already closed. This is called after all other finalization logic is executed.\n   * @param shouldUnsubscribe An optional check to see if an unsubscribe call should truly unsubscribe.\n   * NOTE: This currently **ONLY** exists to support the strange behavior of {@link groupBy}, where unsubscription\n   * to the resulting observable does not actually disconnect from the source if there are active subscriptions\n   * to any grouped observable. (DO NOT EXPOSE OR USE EXTERNALLY!!!)\n   */\n  constructor(\n    destination: Subscriber<any>,\n    onNext?: (value: T) => void,\n    onComplete?: () => void,\n    onError?: (err: any) => void,\n    private onFinalize?: () => void,\n    private shouldUnsubscribe?: () => boolean\n  ) {\n    // It's important - for performance reasons - that all of this class's\n    // members are initialized and that they are always initialized in the same\n    // order. This will ensure that all OperatorSubscriber instances have the\n    // same hidden class in V8. This, in turn, will help keep the number of\n    // hidden classes involved in property accesses within the base class as\n    // low as possible. If the number of hidden classes involved exceeds four,\n    // the property accesses will become megamorphic and performance penalties\n    // will be incurred - i.e. inline caches won't be used.\n    //\n    // The reasons for ensuring all instances have the same hidden class are\n    // further discussed in this blog post from Benedikt Meurer:\n    // https://benediktmeurer.de/2018/03/23/impact-of-polymorphism-on-component-based-frameworks-like-react/\n    super(destination);\n    this._next = onNext\n      ? function (this: OperatorSubscriber<T>, value: T) {\n          try {\n            onNext(value);\n          } catch (err) {\n            destination.error(err);\n          }\n        }\n      : super._next;\n    this._error = onError\n      ? function (this: OperatorSubscriber<T>, err: any) {\n          try {\n            onError(err);\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._error;\n    this._complete = onComplete\n      ? function (this: OperatorSubscriber<T>) {\n          try {\n            onComplete();\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._complete;\n  }\n\n  unsubscribe() {\n    if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n      const { closed } = this;\n      super.unsubscribe();\n      // Execute additional teardown if we have any and we didn't already do so.\n      !closed && this.onFinalize?.();\n    }\n  }\n}\n","/** @prettier */\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * ## Example\n *\n * Ensure values in subscribe are called just before browser repaint\n *\n * ```ts\n * import { interval, observeOn, animationFrameScheduler } from 'rxjs';\n *\n * const someDiv = document.createElement('div');\n * someDiv.style.cssText = 'width: 200px;background: #09c';\n * document.body.appendChild(someDiv);\n * const intervals = interval(10);      // Intervals are scheduled\n *                                      // with async scheduler by default...\n * intervals.pipe(\n *   observeOn(animationFrameScheduler) // ...but we will observe on animationFrame\n * )                                    // scheduler to ensure smooth animation.\n * .subscribe(val => {\n *   someDiv.style.height = val + 'px';\n * });\n * ```\n *\n * @see {@link delay}\n *\n * @param scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param delay Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return A function that returns an Observable that emits the same\n * notifications as the source Observable, but with provided scheduler.\n */\nexport function observeOn<T>(scheduler: SchedulerLike, delay = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => executeSchedule(subscriber, scheduler, () => subscriber.next(value), delay),\n        () => executeSchedule(subscriber, scheduler, () => subscriber.complete(), delay),\n        (err) => executeSchedule(subscriber, scheduler, () => subscriber.error(err), delay)\n      )\n    );\n  });\n}\n","import { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified {@link SchedulerLike}.\n *\n * With `subscribeOn` you can decide what type of scheduler a specific Observable will be using when it is subscribed to.\n *\n * Schedulers control the speed and order of emissions to observers from an Observable stream.\n *\n * ![](subscribeOn.png)\n *\n * ## Example\n *\n * Given the following code:\n *\n * ```ts\n * import { of, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3);\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * // 6\n * ```\n *\n * Both Observable `a` and `b` will emit their values directly and synchronously once they are subscribed to.\n *\n * If we instead use the `subscribeOn` operator declaring that we want to use the {@link asyncScheduler} for values emitted by Observable `a`:\n *\n * ```ts\n * import { of, subscribeOn, asyncScheduler, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3).pipe(subscribeOn(asyncScheduler));\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 4\n * // 5\n * // 6\n * // 1\n * // 2\n * // 3\n * ```\n *\n * The reason for this is that Observable `b` emits its values directly and synchronously like before\n * but the emissions from `a` are scheduled on the event loop because we are now using the {@link asyncScheduler} for that specific Observable.\n *\n * @param scheduler The {@link SchedulerLike} to perform subscription actions on.\n * @param delay A delay to pass to the scheduler to delay subscriptions\n * @return A function that returns an Observable modified so that its\n * subscriptions happen on the specified {@link SchedulerLike}.\n */\nexport function subscribeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    subscriber.add(scheduler.schedule(() => source.subscribe(subscriber), delay));\n  });\n}\n","import { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport function scheduleAsyncIterable<T>(input: AsyncIterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable<T>((subscriber) => {\n    executeSchedule(subscriber, scheduler, () => {\n      const iterator = input[Symbol.asyncIterator]();\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          iterator.next().then((result) => {\n            if (result.done) {\n              // This will remove the subscriptions from\n              // the parent subscription.\n              subscriber.complete();\n            } else {\n              subscriber.next(result.value);\n            }\n          });\n        },\n        0,\n        true\n      );\n    });\n  });\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { scheduled } from '../scheduled/scheduled';\nimport { innerFrom } from './innerFrom';\n\nexport function from<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function from<O extends ObservableInput<any>>(input: O, scheduler: SchedulerLike | undefined): Observable<ObservedValueOf<O>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n *\n * Converts an array to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10\n * // 20\n * // 30\n * ```\n *\n * Convert an infinite iterable (from a generator) to an Observable\n *\n * ```ts\n * import { from, take } from 'rxjs';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3\n * // 6\n * // 12\n * // 24\n * // 48\n * // 96\n * // 192\n * // 384\n * // 768\n * // 1536\n * ```\n *\n * With `asyncScheduler`\n *\n * ```ts\n * import { from, asyncScheduler } from 'rxjs';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, asyncScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // 'start'\n * // 'end'\n * // 10\n * // 20\n * // 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n */\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  return scheduler ? scheduled(input, scheduler) : innerFrom(input);\n}\n","import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\n\n/**\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\n * are scheduled on the provided scheduler.\n *\n * @see {@link from}\n * @see {@link of}\n *\n * @param input The observable, array, promise, iterable, etc you would like to schedule\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\n * the returned observable.\n */\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    }\n    if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    }\n    if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    }\n    if (isAsyncIterable(input)) {\n      return scheduleAsyncIterable(input, scheduler);\n    }\n    if (isIterable(input)) {\n      return scheduleIterable(input, scheduler);\n    }\n    if (isReadableStreamLike(input)) {\n      return scheduleReadableStreamLike(input, scheduler);\n    }\n  }\n  throw createInvalidObservableTypeError(input);\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { InteropObservable, SchedulerLike } from '../types';\n\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    // The current array index.\n    let i = 0;\n    // Start iterating over the array like on a schedule.\n    return scheduler.schedule(function () {\n      if (i === input.length) {\n        // If we have hit the end of the array like in the\n        // previous job, we can complete.\n        subscriber.complete();\n      } else {\n        // Otherwise let's next the value at the current index,\n        // then increment our index.\n        subscriber.next(input[i++]);\n        // If the last emission didn't cause us to close the subscriber\n        // (via take or some side effect), reschedule the job and we'll\n        // make another pass.\n        if (!subscriber.closed) {\n          this.schedule();\n        }\n      }\n    });\n  });\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { SchedulerLike } from '../types';\n\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\n\n/**\n * Used in {@link scheduled} to create an observable from an Iterable.\n * @param input The iterable to create an observable from\n * @param scheduler The scheduler to use\n */\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    let iterator: Iterator<T, T>;\n\n    // Schedule the initial creation of the iterator from\n    // the iterable. This is so the code in the iterable is\n    // not called until the scheduled job fires.\n    executeSchedule(subscriber, scheduler, () => {\n      // Create the iterator.\n      iterator = (input as any)[Symbol_iterator]();\n\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          let value: T;\n          let done: boolean | undefined;\n          try {\n            // Pull the value out of the iterator\n            ({ value, done } = iterator.next());\n          } catch (err) {\n            // We got an error while pulling from the iterator\n            subscriber.error(err);\n            return;\n          }\n\n          if (done) {\n            // If it is \"done\" we just complete. This mimics the\n            // behavior of JavaScript's `for..of` consumption of\n            // iterables, which will not emit the value from an iterator\n            // result of `{ done: true: value: 'here' }`.\n            subscriber.complete();\n          } else {\n            // The iterable is not done, emit the value.\n            subscriber.next(value);\n          }\n        },\n        0,\n        true\n      );\n    });\n\n    // During finalization, if we see this iterator has a `return` method,\n    // then we know it is a Generator, and not just an Iterator. So we call\n    // the `return()` function. This will ensure that any `finally { }` blocks\n    // inside of the generator we can hit will be hit properly.\n    return () => isFunction(iterator?.return) && iterator.return();\n  });\n}\n","import { SchedulerLike, ReadableStreamLike } from '../types';\nimport { Observable } from '../Observable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\n\nexport function scheduleReadableStreamLike<T>(input: ReadableStreamLike<T>, scheduler: SchedulerLike): Observable<T> {\n  return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler);\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function map<T, R>(project: (value: T, index: number) => R): OperatorFunction<T, R>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function map<T, R, A>(project: (this: A, value: T, index: number) => R, thisArg: A): OperatorFunction<T, R>;\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n *\n * Map every click to the `clientX` position of that click\n *\n * ```ts\n * import { fromEvent, map } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n *\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return A function that returns an Observable that emits the values from the\n * source Observable transformed by the given `project` function.\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return operate((source, subscriber) => {\n    // The index of the value from the source. Used with projection.\n    let index = 0;\n    // Subscribe to the source, all errors and completions are sent along\n    // to the consumer.\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value: T) => {\n        // Call the projection function with the appropriate this context,\n        // and send the resulting value to the consumer.\n        subscriber.next(project.call(thisArg, value, index++));\n      })\n    );\n  });\n}\n","import { OperatorFunction } from \"../types\";\nimport { map } from \"../operators/map\";\n\nconst { isArray } = Array;\n\nfunction callOrApply<T, R>(fn: ((...values: T[]) => R), args: T|T[]): R {\n    return isArray(args) ? fn(...args) : fn(args);\n}\n\n/**\n * Used in several -- mostly deprecated -- situations where we need to \n * apply a list of arguments or a single argument to a result selector.\n */\nexport function mapOneOrManyArgs<T, R>(fn: ((...values: T[]) => R)): OperatorFunction<T|T[], R> {\n    return map(args => callOrApply(fn, args))\n}","import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && isFunction(value.schedule);\n}\n","import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\nimport { isScheduler } from './isScheduler';\n\nfunction last<T>(arr: T[]): T | undefined {\n  return arr[arr.length - 1];\n}\n\nexport function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined {\n  return isFunction(last(args)) ? args.pop() : undefined;\n}\n\nexport function popScheduler(args: any[]): SchedulerLike | undefined {\n  return isScheduler(last(args)) ? args.pop() : undefined;\n}\n\nexport function popNumber(args: any[], defaultValue: number): number {\n  return typeof last(args) === 'number' ? args.pop()! : defaultValue;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf, ObservableInputTuple } from '../types';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { Subscriber } from '../Subscriber';\nimport { from } from './from';\nimport { identity } from '../util/identity';\nimport { Subscription } from '../Subscription';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { popResultSelector, popScheduler } from '../util/args';\nimport { createObject } from '../util/createObject';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { AnyCatcher } from '../AnyCatcher';\nimport { executeSchedule } from '../util/executeSchedule';\n\n// combineLatest(any)\n// We put this first because we need to catch cases where the user has supplied\n// _exactly `any`_ as the argument. Since `any` literally matches _anything_,\n// we don't want it to randomly hit one of the other type signatures below,\n// as we have no idea at build-time what type we should be returning when given an any.\n\n/**\n * You have passed `any` here, we can't figure out if it is\n * an array or an object, so you're getting `unknown`. Use better types.\n * @param arg Something typed as `any`\n */\nexport function combineLatest<T extends AnyCatcher>(arg: T): Observable<unknown>;\n\n// combineLatest([a, b, c])\nexport function combineLatest(sources: []): Observable<never>;\nexport function combineLatest<A extends readonly unknown[]>(sources: readonly [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R,\n  scheduler: SchedulerLike\n): Observable<R>;\nexport function combineLatest<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R\n): Observable<R>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[]>(\n  sources: readonly [...ObservableInputTuple<A>],\n  scheduler: SchedulerLike\n): Observable<A>;\n\n// combineLatest(a, b, c)\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function combineLatest<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelectorAndScheduler: [...ObservableInputTuple<A>, (...values: A) => R, SchedulerLike]\n): Observable<R>;\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelector: [...ObservableInputTuple<A>, (...values: A) => R]\n): Observable<R>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike]\n): Observable<A>;\n\n// combineLatest({a, b, c})\nexport function combineLatest(sourcesObject: { [K in any]: never }): Observable<never>;\nexport function combineLatest<T extends Record<string, ObservableInput<any>>>(\n  sourcesObject: T\n): Observable<{ [K in keyof T]: ObservedValueOf<T[K]> }>;\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * ![](combineLatest.png)\n *\n * `combineLatest` combines the values from all the Observables passed in the\n * observables array. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to this operator,\n * the returned Observable will always emit an array of `n` values, in an order\n * corresponding to the order of the passed Observables (the value from the first Observable\n * will be at index 0 of the array and so on).\n *\n * Static version of `combineLatest` accepts an array of Observables. Note that an array of\n * Observables is a good choice, if you don't know beforehand how many Observables\n * you will combine. Passing an empty array will result in an Observable that\n * completes immediately.\n *\n * To ensure the output array always has the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all these values but the last\n * will be lost. On the other hand, if some Observable does not emit a value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will now be impossible to include a value from the\n * completed Observable in the resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, the resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, the result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of a completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * ## Examples\n *\n * Combine two timer Observables\n *\n * ```ts\n * import { timer, combineLatest } from 'rxjs';\n *\n * const firstTimer = timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = combineLatest([firstTimer, secondTimer]);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n * ```\n *\n * Combine a dictionary of Observables\n *\n * ```ts\n * import { of, delay, startWith, combineLatest } from 'rxjs';\n *\n * const observables = {\n *   a: of(1).pipe(delay(1000), startWith(0)),\n *   b: of(5).pipe(delay(5000), startWith(0)),\n *   c: of(10).pipe(delay(10000), startWith(0))\n * };\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // { a: 0, b: 0, c: 0 } immediately\n * // { a: 1, b: 0, c: 0 } after 1s\n * // { a: 1, b: 5, c: 0 } after 5s\n * // { a: 1, b: 5, c: 10 } after 10s\n * ```\n *\n * Combine an array of Observables\n *\n * ```ts\n * import { of, delay, startWith, combineLatest } from 'rxjs';\n *\n * const observables = [1, 5, 10].map(\n *   n => of(n).pipe(\n *     delay(n * 1000), // emit 0 and then emit n after n seconds\n *     startWith(0)\n *   )\n * );\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n * ```\n *\n * Use map operator to dynamically calculate the Body-Mass Index\n *\n * ```ts\n * import { of, combineLatest, map } from 'rxjs';\n *\n * const weight = of(70, 72, 76, 79, 75);\n * const height = of(1.76, 1.77, 1.78);\n * const bmi = combineLatest([weight, height]).pipe(\n *   map(([w, h]) => w / (h * h)),\n * );\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} [observables] An array of input Observables to combine with each other.\n * An array of Observables must be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n */\nexport function combineLatest<O extends ObservableInput<any>, R>(...args: any[]): Observable<R> | Observable<ObservedValueOf<O>[]> {\n  const scheduler = popScheduler(args);\n  const resultSelector = popResultSelector(args);\n\n  const { args: observables, keys } = argsArgArrayOrObject(args);\n\n  if (observables.length === 0) {\n    // If no observables are passed, or someone has passed an empty array\n    // of observables, or even an empty object POJO, we need to just\n    // complete (EMPTY), but we have to honor the scheduler provided if any.\n    return from([], scheduler as any);\n  }\n\n  const result = new Observable<ObservedValueOf<O>[]>(\n    combineLatestInit(\n      observables as ObservableInput<ObservedValueOf<O>>[],\n      scheduler,\n      keys\n        ? // A handler for scrubbing the array of args into a dictionary.\n          (values) => createObject(keys, values)\n        : // A passthrough to just return the array\n          identity\n    )\n  );\n\n  return resultSelector ? (result.pipe(mapOneOrManyArgs(resultSelector)) as Observable<R>) : result;\n}\n\nexport function combineLatestInit(\n  observables: ObservableInput<any>[],\n  scheduler?: SchedulerLike,\n  valueTransform: (values: any[]) => any = identity\n) {\n  return (subscriber: Subscriber<any>) => {\n    // The outer subscription. We're capturing this in a function\n    // because we may have to schedule it.\n    maybeSchedule(\n      scheduler,\n      () => {\n        const { length } = observables;\n        // A store for the values each observable has emitted so far. We match observable to value on index.\n        const values = new Array(length);\n        // The number of currently active subscriptions, as they complete, we decrement this number to see if\n        // we are all done combining values, so we can complete the result.\n        let active = length;\n        // The number of inner sources that still haven't emitted the first value\n        // We need to track this because all sources need to emit one value in order\n        // to start emitting values.\n        let remainingFirstValues = length;\n        // The loop to kick off subscription. We're keying everything on index `i` to relate the observables passed\n        // in to the slot in the output array or the key in the array of keys in the output dictionary.\n        for (let i = 0; i < length; i++) {\n          maybeSchedule(\n            scheduler,\n            () => {\n              const source = from(observables[i], scheduler as any);\n              let hasFirstValue = false;\n              source.subscribe(\n                createOperatorSubscriber(\n                  subscriber,\n                  (value) => {\n                    // When we get a value, record it in our set of values.\n                    values[i] = value;\n                    if (!hasFirstValue) {\n                      // If this is our first value, record that.\n                      hasFirstValue = true;\n                      remainingFirstValues--;\n                    }\n                    if (!remainingFirstValues) {\n                      // We're not waiting for any more\n                      // first values, so we can emit!\n                      subscriber.next(valueTransform(values.slice()));\n                    }\n                  },\n                  () => {\n                    if (!--active) {\n                      // We only complete the result if we have no more active\n                      // inner observables.\n                      subscriber.complete();\n                    }\n                  }\n                )\n              );\n            },\n            subscriber\n          );\n        }\n      },\n      subscriber\n    );\n  };\n}\n\n/**\n * A small utility to handle the couple of locations where we want to schedule if a scheduler was provided,\n * but we don't if there was no scheduler.\n */\nfunction maybeSchedule(scheduler: SchedulerLike | undefined, execute: () => void, subscription: Subscription) {\n  if (scheduler) {\n    executeSchedule(subscription, scheduler, execute);\n  } else {\n    execute();\n  }\n}\n","export function createObject(keys: string[], values: any[]) {\n  return keys.reduce((result, key, i) => ((result[key] = values[i]), result), {} as any);\n}\n","import { SchedulerLike, ValueFromArray } from '../types';\nimport { Observable } from '../Observable';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\n// Devs are more likely to pass null or undefined than they are a scheduler\n// without accompanying values. To make things easier for (naughty) devs who\n// use the `strictNullChecks: false` TypeScript compiler option, these\n// overloads with explicit null and undefined values are included.\n\nexport function of(value: null): Observable<null>;\nexport function of(value: undefined): Observable<undefined>;\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of(scheduler: SchedulerLike): Observable<never>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of<A extends readonly unknown[]>(...valuesAndScheduler: [...A, SchedulerLike]): Observable<ValueFromArray<A>>;\n\nexport function of(): Observable<never>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function of<T>(): Observable<T>;\nexport function of<T>(value: T): Observable<T>;\nexport function of<A extends readonly unknown[]>(...values: A): Observable<ValueFromArray<A>>;\n\n/**\n * Converts the arguments to an observable sequence.\n *\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\n *\n * ![](of.png)\n *\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\n * as a separate `next` notification.\n *\n * ## Examples\n *\n * Emit the values `10, 20, 30`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of(10, 20, 30)\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: 10\n * // next: 20\n * // next: 30\n * // the end\n * ```\n *\n * Emit the array `[1, 2, 3]`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of([1, 2, 3])\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: [1, 2, 3]\n * // the end\n * ```\n *\n * @see {@link from}\n * @see {@link range}\n *\n * @param {...T} values A comma separated list of arguments you want to be emitted\n * @return {Observable} An Observable that emits the arguments\n * described above and then completes.\n */\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  const scheduler = popScheduler(args);\n  return from(args as T[], scheduler);\n}\n","import { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n  concurrent?: number\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n *\n * Map and flatten each letter to an Observable ticking every 1 second\n *\n * ```ts\n * import { of, mergeMap, interval, map } from 'rxjs';\n *\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x + i)))\n * );\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a, b, c every second with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and merging\n * the results of the Observables obtained from this transformation.\n */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Infinity\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (isFunction(resultSelector)) {\n    // DEPRECATED PATH\n    return mergeMap((a, i) => map((b: any, ii: number) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n\n  return operate((source, subscriber) => mergeInternals(source, subscriber, project, concurrent));\n}\n","import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subscriber } from '../Subscriber';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A process embodying the general \"merge\" strategy. This is used in\n * `mergeMap` and `mergeScan` because the logic is otherwise nearly identical.\n * @param source The original source observable\n * @param subscriber The consumer subscriber\n * @param project The projection function to get our inner sources\n * @param concurrent The number of concurrent inner subscriptions\n * @param onBeforeNext Additional logic to apply before nexting to our consumer\n * @param expand If `true` this will perform an \"expand\" strategy, which differs only\n * in that it recurses, and the inner subscription must be schedule-able.\n * @param innerSubScheduler A scheduler to use to schedule inner subscriptions,\n * this is to support the expand strategy, mostly, and should be deprecated\n */\nexport function mergeInternals<T, R>(\n  source: Observable<T>,\n  subscriber: Subscriber<R>,\n  project: (value: T, index: number) => ObservableInput<R>,\n  concurrent: number,\n  onBeforeNext?: (innerValue: R) => void,\n  expand?: boolean,\n  innerSubScheduler?: SchedulerLike,\n  additionalFinalizer?: () => void\n) {\n  // Buffered values, in the event of going over our concurrency limit\n  const buffer: T[] = [];\n  // The number of active inner subscriptions.\n  let active = 0;\n  // An index to pass to our accumulator function\n  let index = 0;\n  // Whether or not the outer source has completed.\n  let isComplete = false;\n\n  /**\n   * Checks to see if we can complete our result or not.\n   */\n  const checkComplete = () => {\n    // If the outer has completed, and nothing is left in the buffer,\n    // and we don't have any active inner subscriptions, then we can\n    // Emit the state and complete.\n    if (isComplete && !buffer.length && !active) {\n      subscriber.complete();\n    }\n  };\n\n  // If we're under our concurrency limit, just start the inner subscription, otherwise buffer and wait.\n  const outerNext = (value: T) => (active < concurrent ? doInnerSub(value) : buffer.push(value));\n\n  const doInnerSub = (value: T) => {\n    // If we're expanding, we need to emit the outer values and the inner values\n    // as the inners will \"become outers\" in a way as they are recursively fed\n    // back to the projection mechanism.\n    expand && subscriber.next(value as any);\n\n    // Increment the number of active subscriptions so we can track it\n    // against our concurrency limit later.\n    active++;\n\n    // A flag used to show that the inner observable completed.\n    // This is checked during finalization to see if we should\n    // move to the next item in the buffer, if there is on.\n    let innerComplete = false;\n\n    // Start our inner subscription.\n    innerFrom(project(value, index++)).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (innerValue) => {\n          // `mergeScan` has additional handling here. For example\n          // taking the inner value and updating state.\n          onBeforeNext?.(innerValue);\n\n          if (expand) {\n            // If we're expanding, then just recurse back to our outer\n            // handler. It will emit the value first thing.\n            outerNext(innerValue as any);\n          } else {\n            // Otherwise, emit the inner value.\n            subscriber.next(innerValue);\n          }\n        },\n        () => {\n          // Flag that we have completed, so we know to check the buffer\n          // during finalization.\n          innerComplete = true;\n        },\n        // Errors are passed to the destination.\n        undefined,\n        () => {\n          // During finalization, if the inner completed (it wasn't errored or\n          // cancelled), then we want to try the next item in the buffer if\n          // there is one.\n          if (innerComplete) {\n            // We have to wrap this in a try/catch because it happens during\n            // finalization, possibly asynchronously, and we want to pass\n            // any errors that happen (like in a projection function) to\n            // the outer Subscriber.\n            try {\n              // INNER SOURCE COMPLETE\n              // Decrement the active count to ensure that the next time\n              // we try to call `doInnerSub`, the number is accurate.\n              active--;\n              // If we have more values in the buffer, try to process those\n              // Note that this call will increment `active` ahead of the\n              // next conditional, if there were any more inner subscriptions\n              // to start.\n              while (buffer.length && active < concurrent) {\n                const bufferedValue = buffer.shift()!;\n                // Particularly for `expand`, we need to check to see if a scheduler was provided\n                // for when we want to start our inner subscription. Otherwise, we just start\n                // are next inner subscription.\n                if (innerSubScheduler) {\n                  executeSchedule(subscriber, innerSubScheduler, () => doInnerSub(bufferedValue));\n                } else {\n                  doInnerSub(bufferedValue);\n                }\n              }\n              // Check to see if we can complete, and complete if so.\n              checkComplete();\n            } catch (err) {\n              subscriber.error(err);\n            }\n          }\n        }\n      )\n    );\n  };\n\n  // Subscribe to our source observable.\n  source.subscribe(\n    createOperatorSubscriber(subscriber, outerNext, () => {\n      // Outer completed, make a note of it, and check to see if we can complete everything.\n      isComplete = true;\n      checkComplete();\n    })\n  );\n\n  // Additional finalization (for when the destination is torn down).\n  // Other finalization is added implicitly via subscription above.\n  return () => {\n    additionalFinalizer?.();\n  };\n}\n","import { mergeMap } from './mergeMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function concatMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * ![](concatMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, concatMap, interval, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   concatMap(ev => interval(1000).pipe(take(4)))\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and taking\n * values from each projected inner Observable sequentially.\n */\nexport function concatMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return isFunction(resultSelector) ? mergeMap(project, resultSelector, 1) : mergeMap(project, 1);\n}\n","import { MonoTypeOperatorFunction, Observer } from '../types';\nimport { isFunction } from '../util/isFunction';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\n\n/**\n * An extension to the {@link Observer} interface used only by the {@link tap} operator.\n *\n * It provides a useful set of callbacks a user can register to do side-effects in\n * cases other than what the usual {@link Observer} callbacks are\n * ({@link guide/glossary-and-semantics#next next},\n * {@link guide/glossary-and-semantics#error error} and/or\n * {@link guide/glossary-and-semantics#complete complete}).\n *\n * ## Example\n *\n * ```ts\n * import { fromEvent, switchMap, tap, interval, take } from 'rxjs';\n *\n * const source$ = fromEvent(document, 'click');\n * const result$ = source$.pipe(\n *   switchMap((_, i) => i % 2 === 0\n *     ? fromEvent(document, 'mousemove').pipe(\n *         tap({\n *           subscribe: () => console.log('Subscribed to the mouse move events after click #' + i),\n *           unsubscribe: () => console.log('Mouse move events #' + i + ' unsubscribed'),\n *           finalize: () => console.log('Mouse move events #' + i + ' finalized')\n *         })\n *       )\n *     : interval(1_000).pipe(\n *         take(5),\n *         tap({\n *           subscribe: () => console.log('Subscribed to the 1-second interval events after click #' + i),\n *           unsubscribe: () => console.log('1-second interval events #' + i + ' unsubscribed'),\n *           finalize: () => console.log('1-second interval events #' + i + ' finalized')\n *         })\n *       )\n *   )\n * );\n *\n * const subscription = result$.subscribe({\n *   next: console.log\n * });\n *\n * setTimeout(() => {\n *   console.log('Unsubscribe after 60 seconds');\n *   subscription.unsubscribe();\n * }, 60_000);\n * ```\n */\nexport interface TapObserver<T> extends Observer<T> {\n  /**\n   * The callback that `tap` operator invokes at the moment when the source Observable\n   * gets subscribed to.\n   */\n  subscribe: () => void;\n  /**\n   * The callback that `tap` operator invokes when an explicit\n   * {@link guide/glossary-and-semantics#unsubscription unsubscribe} happens. It won't get invoked on\n   * `error` or `complete` events.\n   */\n  unsubscribe: () => void;\n  /**\n   * The callback that `tap` operator invokes when any kind of\n   * {@link guide/glossary-and-semantics#finalization finalization} happens - either when\n   * the source Observable `error`s or `complete`s or when it gets explicitly unsubscribed\n   * by the user. There is no difference in using this callback or the {@link finalize}\n   * operator, but if you're already using `tap` operator, you can use this callback\n   * instead. You'd get the same result in either case.\n   */\n  finalize: () => void;\n}\nexport function tap<T>(observerOrNext?: Partial<TapObserver<T>> | ((value: T) => void)): MonoTypeOperatorFunction<T>;\n/** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\nexport function tap<T>(\n  next?: ((value: T) => void) | null,\n  error?: ((error: any) => void) | null,\n  complete?: (() => void) | null\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Used to perform side-effects for notifications from the source observable\n *\n * <span class=\"informal\">Used when you want to affect outside state with a notification without altering the notification</span>\n *\n * ![](tap.png)\n *\n * Tap is designed to allow the developer a designated place to perform side effects. While you _could_ perform side-effects\n * inside of a `map` or a `mergeMap`, that would make their mapping functions impure, which isn't always a big deal, but will\n * make it so you can't do things like memoize those functions. The `tap` operator is designed solely for such side-effects to\n * help you remove side-effects from other operations.\n *\n * For any notification, next, error, or complete, `tap` will call the appropriate callback you have provided to it, via a function\n * reference, or a partial observer, then pass that notification down the stream.\n *\n * The observable returned by `tap` is an exact mirror of the source, with one exception: Any error that occurs -- synchronously -- in a handler\n * provided to `tap` will be emitted as an error from the returned observable.\n *\n * > Be careful! You can mutate objects as they pass through the `tap` operator's handlers.\n *\n * The most common use of `tap` is actually for debugging. You can place a `tap(console.log)` anywhere\n * in your observable `pipe`, log out the notifications as they are emitted by the source returned by the previous\n * operation.\n *\n * ## Examples\n *\n * Check a random number before it is handled. Below is an observable that will use a random number between 0 and 1,\n * and emit `'big'` or `'small'` depending on the size of that number. But we wanted to log what the original number\n * was, so we have added a `tap(console.log)`.\n *\n * ```ts\n * import { of, tap, map } from 'rxjs';\n *\n * of(Math.random()).pipe(\n *   tap(console.log),\n *   map(n => n > 0.5 ? 'big' : 'small')\n * ).subscribe(console.log);\n * ```\n *\n * Using `tap` to analyze a value and force an error. Below is an observable where in our system we only\n * want to emit numbers 3 or less we get from another source. We can force our observable to error\n * using `tap`.\n *\n * ```ts\n * import { of, tap } from 'rxjs';\n *\n * const source = of(1, 2, 3, 4, 5);\n *\n * source.pipe(\n *   tap(n => {\n *     if (n > 3) {\n *       throw new TypeError(`Value ${ n } is greater than 3`);\n *     }\n *   })\n * )\n * .subscribe({ next: console.log, error: err => console.log(err.message) });\n * ```\n *\n * We want to know when an observable completes before moving on to the next observable. The system\n * below will emit a random series of `'X'` characters from 3 different observables in sequence. The\n * only way we know when one observable completes and moves to the next one, in this case, is because\n * we have added a `tap` with the side effect of logging to console.\n *\n * ```ts\n * import { of, concatMap, interval, take, map, tap } from 'rxjs';\n *\n * of(1, 2, 3).pipe(\n *   concatMap(n => interval(1000).pipe(\n *     take(Math.round(Math.random() * 10)),\n *     map(() => 'X'),\n *     tap({ complete: () => console.log(`Done with ${ n }`) })\n *   ))\n * )\n * .subscribe(console.log);\n * ```\n *\n * @see {@link finalize}\n * @see {@link TapObserver}\n *\n * @param observerOrNext A next handler or partial observer\n * @param error An error handler\n * @param complete A completion handler\n * @return A function that returns an Observable identical to the source, but\n * runs the specified Observer or callback(s) for each item.\n */\nexport function tap<T>(\n  observerOrNext?: Partial<TapObserver<T>> | ((value: T) => void) | null,\n  error?: ((e: any) => void) | null,\n  complete?: (() => void) | null\n): MonoTypeOperatorFunction<T> {\n  // We have to check to see not only if next is a function,\n  // but if error or complete were passed. This is because someone\n  // could technically call tap like `tap(null, fn)` or `tap(null, null, fn)`.\n  const tapObserver =\n    isFunction(observerOrNext) || error || complete\n      ? // tslint:disable-next-line: no-object-literal-type-assertion\n        ({ next: observerOrNext as Exclude<typeof observerOrNext, Partial<TapObserver<T>>>, error, complete } as Partial<TapObserver<T>>)\n      : observerOrNext;\n\n  return tapObserver\n    ? operate((source, subscriber) => {\n        tapObserver.subscribe?.();\n        let isUnsub = true;\n        source.subscribe(\n          createOperatorSubscriber(\n            subscriber,\n            (value) => {\n              tapObserver.next?.(value);\n              subscriber.next(value);\n            },\n            () => {\n              isUnsub = false;\n              tapObserver.complete?.();\n              subscriber.complete();\n            },\n            (err) => {\n              isUnsub = false;\n              tapObserver.error?.(err);\n              subscriber.error(err);\n            },\n            () => {\n              if (isUnsub) {\n                tapObserver.unsubscribe?.();\n              }\n              tapObserver.finalize?.();\n            }\n          )\n        );\n      })\n    : // Tap was called with no valid tap observer or handler\n      // (e.g. `tap(null, null, null)` or `tap(null)` or `tap()`)\n      // so we're going to just mirror the source.\n      identity;\n}\n","import { Observable } from '../Observable';\n\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { Subscription } from '../Subscription';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { operate } from '../util/lift';\n\n/* tslint:disable:max-line-length */\nexport function catchError<T, O extends ObservableInput<any>>(\n  selector: (err: any, caught: Observable<T>) => O\n): OperatorFunction<T, T | ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <span class=\"informal\">\n * It only listens to the error channel and ignores notifications.\n * Handles errors from the source observable, and maps them to a new observable.\n * The error may also be rethrown, or a new error can be thrown to emit an error from the result.\n * </span>\n *\n * ![](catch.png)\n *\n * This operator handles errors, but forwards along all other events to the resulting observable.\n * If the source observable terminates with an error, it will map that error to a new observable,\n * subscribe to it, and forward all of its events to the resulting observable.\n *\n * ## Examples\n *\n * Continue with a different Observable when there's an error\n *\n * ```ts\n * import { of, map, catchError } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError(err => of('I', 'II', 'III', 'IV', 'V'))\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n * ```\n *\n * Retry the caught source Observable again in case of error, similar to `retry()` operator\n *\n * ```ts\n * import { of, map, catchError, take } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError((err, caught) => caught),\n *     take(30)\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n * ```\n *\n * Throw a new error when the source Observable throws an error\n *\n * ```ts\n * import { of, map, catchError } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError(err => {\n *       throw 'error in source. Details: ' + err;\n *     })\n *   )\n *   .subscribe({\n *     next: x => console.log(x),\n *     error: err => console.log(err)\n *   });\n *   // 1, 2, 3, error in source. Details: four!\n * ```\n *\n * @see {@link onErrorResumeNext}\n * @see {@link repeat}\n * @see {@link repeatWhen}\n * @see {@link retry }\n * @see {@link retryWhen}\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n * is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n * is returned by the `selector` will be used to continue the observable chain.\n * @return A function that returns an Observable that originates from either\n * the source or the Observable returned by the `selector` function.\n */\nexport function catchError<T, O extends ObservableInput<any>>(\n  selector: (err: any, caught: Observable<T>) => O\n): OperatorFunction<T, T | ObservedValueOf<O>> {\n  return operate((source, subscriber) => {\n    let innerSub: Subscription | null = null;\n    let syncUnsub = false;\n    let handledResult: Observable<ObservedValueOf<O>>;\n\n    innerSub = source.subscribe(\n      createOperatorSubscriber(subscriber, undefined, undefined, (err) => {\n        handledResult = innerFrom(selector(err, catchError(selector)(source)));\n        if (innerSub) {\n          innerSub.unsubscribe();\n          innerSub = null;\n          handledResult.subscribe(subscriber);\n        } else {\n          // We don't have an innerSub yet, that means the error was synchronous\n          // because the subscribe call hasn't returned yet.\n          syncUnsub = true;\n        }\n      })\n    );\n\n    if (syncUnsub) {\n      // We have a synchronous error, we need to make sure to\n      // finalize right away. This ensures that callbacks in the `finalize` operator are called\n      // at the right time, and that finalization occurs at the expected\n      // time between the source error and the subscription to the\n      // next observable.\n      innerSub.unsubscribe();\n      innerSub = null;\n      handledResult!.subscribe(subscriber);\n    }\n  });\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { SchedulerLike } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * Creates an observable that will create an error instance and push it to the consumer as an error\n * immediately upon subscription.\n *\n * <span class=\"informal\">Just errors and does nothing else</span>\n *\n * ![](throw.png)\n *\n * This creation function is useful for creating an observable that will create an error and error every\n * time it is subscribed to. Generally, inside of most operators when you might want to return an errored\n * observable, this is unnecessary. In most cases, such as in the inner return of {@link concatMap},\n * {@link mergeMap}, {@link defer}, and many others, you can simply throw the error, and RxJS will pick\n * that up and notify the consumer of the error.\n *\n * ## Example\n *\n * Create a simple observable that will create a new error with a timestamp and log it\n * and the message every time you subscribe to it\n *\n * ```ts\n * import { throwError } from 'rxjs';\n *\n * let errorCount = 0;\n *\n * const errorWithTimestamp$ = throwError(() => {\n *   const error: any = new Error(`This is error number ${ ++errorCount }`);\n *   error.timestamp = Date.now();\n *   return error;\n * });\n *\n * errorWithTimestamp$.subscribe({\n *   error: err => console.log(err.timestamp, err.message)\n * });\n *\n * errorWithTimestamp$.subscribe({\n *   error: err => console.log(err.timestamp, err.message)\n * });\n *\n * // Logs the timestamp and a new error message for each subscription\n * ```\n *\n * ### Unnecessary usage\n *\n * Using `throwError` inside of an operator or creation function\n * with a callback, is usually not necessary\n *\n * ```ts\n * import { of, concatMap, timer, throwError } from 'rxjs';\n *\n * const delays$ = of(1000, 2000, Infinity, 3000);\n *\n * delays$.pipe(\n *   concatMap(ms => {\n *     if (ms < 10000) {\n *       return timer(ms);\n *     } else {\n *       // This is probably overkill.\n *       return throwError(() => new Error(`Invalid time ${ ms }`));\n *     }\n *   })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * You can just throw the error instead\n *\n * ```ts\n * import { of, concatMap, timer } from 'rxjs';\n *\n * const delays$ = of(1000, 2000, Infinity, 3000);\n *\n * delays$.pipe(\n *   concatMap(ms => {\n *     if (ms < 10000) {\n *       return timer(ms);\n *     } else {\n *       // Cleaner and easier to read for most folks.\n *       throw new Error(`Invalid time ${ ms }`);\n *     }\n *   })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * @param errorFactory A factory function that will create the error instance that is pushed.\n */\nexport function throwError(errorFactory: () => any): Observable<never>;\n\n/**\n * Returns an observable that will error with the specified error immediately upon subscription.\n *\n * @param error The error instance to emit\n * @deprecated Support for passing an error value will be removed in v8. Instead, pass a factory function to `throwError(() => new Error('test'))`. This is\n * because it will create the error at the moment it should be created and capture a more appropriate stack trace. If\n * for some reason you need to create the error ahead of time, you can still do that: `const err = new Error('test'); throwError(() => err);`.\n */\nexport function throwError(error: any): Observable<never>;\n\n/**\n * Notifies the consumer of an error using a given scheduler by scheduling it at delay `0` upon subscription.\n *\n * @param errorOrErrorFactory An error instance or error factory\n * @param scheduler A scheduler to use to schedule the error notification\n * @deprecated The `scheduler` parameter will be removed in v8.\n * Use `throwError` in combination with {@link observeOn}: `throwError(() => new Error('test')).pipe(observeOn(scheduler));`.\n * Details: https://rxjs.dev/deprecations/scheduler-argument\n */\nexport function throwError(errorOrErrorFactory: any, scheduler: SchedulerLike): Observable<never>;\n\nexport function throwError(errorOrErrorFactory: any, scheduler?: SchedulerLike): Observable<never> {\n  const errorFactory = isFunction(errorOrErrorFactory) ? errorOrErrorFactory : () => errorOrErrorFactory;\n  const init = (subscriber: Subscriber<never>) => subscriber.error(errorFactory());\n  return new Observable(scheduler ? (subscriber) => scheduler.schedule(init as any, 0, subscriber) : init);\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * A simple Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.</span>\n *\n * ![](empty.png)\n *\n * A simple Observable that only emits the complete notification. It can be used\n * for composing with other Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n *\n * Log complete notification\n *\n * ```ts\n * import { EMPTY } from 'rxjs';\n *\n * EMPTY.subscribe({\n *   next: () => console.log('Next'),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Outputs\n * // Complete!\n * ```\n *\n * Emit the number 7, then complete\n *\n * ```ts\n * import { EMPTY, startWith } from 'rxjs';\n *\n * const result = EMPTY.pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n *\n * // Outputs\n * // 7\n * ```\n *\n * Map and flatten only odd numbers to the sequence `'a'`, `'b'`, `'c'`\n *\n * ```ts\n * import { interval, mergeMap, of, EMPTY } from 'rxjs';\n *\n * const interval$ = interval(1000);\n * const result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : EMPTY),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval, e.g. (0, 1, 2, 3, ...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1, print a, b, c (each on its own)\n * // if x % 2 is not equal to 1, nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link NEVER}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const EMPTY = new Observable<never>((subscriber) => subscriber.complete());\n\n/**\n * @param scheduler A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @deprecated Replaced with the {@link EMPTY} constant or {@link scheduled} (e.g. `scheduled([], scheduler)`). Will be removed in v8.\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>((subscriber) => scheduler.schedule(() => subscriber.complete()));\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import type { TimerHandle } from './timerHandle';\ntype SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearIntervalFunction = (handle: TimerHandle) => void;\n\ninterface IntervalProvider {\n  setInterval: SetIntervalFunction;\n  clearInterval: ClearIntervalFunction;\n  delegate:\n    | {\n        setInterval: SetIntervalFunction;\n        clearInterval: ClearIntervalFunction;\n      }\n    | undefined;\n}\n\nexport const intervalProvider: IntervalProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setInterval(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = intervalProvider;\n    if (delegate?.setInterval) {\n      return delegate.setInterval(handler, timeout, ...args);\n    }\n    return setInterval(handler, timeout, ...args);\n  },\n  clearInterval(handle) {\n    const { delegate } = intervalProvider;\n    return (delegate?.clearInterval || clearInterval)(handle as any);\n  },\n  delegate: undefined,\n};\n","import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsyncAction<T> extends Action<T> {\n  public id: TimerHandle | undefined;\n  public state?: T;\n  // @ts-ignore: Property has no initializer and is not definitely assigned\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id ?? this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, _id?: TimerHandle, delay: number = 0): TimerHandle {\n    return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(_scheduler: AsyncScheduler, id?: TimerHandle, delay: number | null = 0): TimerHandle | undefined {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay != null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    if (id != null) {\n      intervalProvider.clearInterval(id);\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, _delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      // HACK: Since code elsewhere is relying on the \"truthiness\" of the\n      // return here, we can't have it return \"\" or 0 or false.\n      // TODO: Clean this up when we refactor schedulers mid-version-8 or so.\n      errorValue = e ? e : new Error('Scheduled action threw falsy error');\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      const { id, scheduler } = this;\n      const { actions } = scheduler;\n\n      this.work = this.state = this.scheduler = null!;\n      this.pending = false;\n\n      arrRemove(actions, this);\n      if (id != null) {\n        this.id = this.recycleAsyncId(scheduler, id, null);\n      }\n\n      this.delay = null!;\n      super.unsubscribe();\n    }\n  }\n}\n","import { TimestampProvider } from '../types';\n\ninterface DateTimestampProvider extends TimestampProvider {\n  delegate: TimestampProvider | undefined;\n}\n\nexport const dateTimestampProvider: DateTimestampProvider = {\n  now() {\n    // Use the variable rather than `this` so that the function can be called\n    // without being bound to the provider.\n    return (dateTimestampProvider.delegate || Date).now();\n  },\n  delegate: undefined,\n};\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}. Will be made internal in v8.\n */\nexport class Scheduler implements SchedulerLike {\n  public static now: () => number = dateTimestampProvider.now;\n\n  constructor(private schedulerActionCtor: typeof Action, now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.schedulerActionCtor<T>(this, work).schedule(state, delay);\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asapScheduler} scheduler.\n *\n * ## Examples\n * Use async scheduler to delay task\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * const task = () => console.log('it works!');\n *\n * asyncScheduler.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n * ```\n *\n * Use async scheduler to repeat task in intervals\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * asyncScheduler.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n * ```\n */\n\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\n\n/**\n * @deprecated Renamed to {@link asyncScheduler}. Will be removed in v8.\n */\nexport const async = asyncScheduler;\n","import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsyncScheduler extends Scheduler {\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @internal\n   */\n  public _active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @internal\n   */\n  public _scheduled: TimerHandle | undefined;\n\n  constructor(SchedulerAction: typeof Action, now: () => number = Scheduler.now) {\n    super(SchedulerAction, now);\n  }\n\n  public flush(action: AsyncAction<any>): void {\n    const { actions } = this;\n\n    if (this._active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this._active = true;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions.shift()!)); // exhaust the scheduler queue\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions.shift()!)) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { async as asyncScheduler } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isValidDate } from '../util/isDate';\n\n/**\n * Creates an observable that will wait for a specified time period, or exact date, before\n * emitting the number 0.\n *\n * <span class=\"informal\">Used to emit a notification after a delay.</span>\n *\n * This observable is useful for creating delays in code, or racing against other values\n * for ad-hoc timeouts.\n *\n * The `delay` is specified by default in milliseconds, however providing a custom scheduler could\n * create a different behavior.\n *\n * ## Examples\n *\n * Wait 3 seconds and start another observable\n *\n * You might want to use `timer` to delay subscription to an\n * observable by a set amount of time. Here we use a timer with\n * {@link concatMapTo} or {@link concatMap} in order to wait\n * a few seconds and start a subscription to a source.\n *\n * ```ts\n * import { of, timer, concatMap } from 'rxjs';\n *\n * // This could be any observable\n * const source = of(1, 2, 3);\n *\n * timer(3000)\n *   .pipe(concatMap(() => source))\n *   .subscribe(console.log);\n * ```\n *\n * Take all values until the start of the next minute\n *\n * Using a `Date` as the trigger for the first emission, you can\n * do things like wait until midnight to fire an event, or in this case,\n * wait until a new minute starts (chosen so the example wouldn't take\n * too long to run) in order to stop watching a stream. Leveraging\n * {@link takeUntil}.\n *\n * ```ts\n * import { interval, takeUntil, timer } from 'rxjs';\n *\n * // Build a Date object that marks the\n * // next minute.\n * const currentDate = new Date();\n * const startOfNextMinute = new Date(\n *   currentDate.getFullYear(),\n *   currentDate.getMonth(),\n *   currentDate.getDate(),\n *   currentDate.getHours(),\n *   currentDate.getMinutes() + 1\n * );\n *\n * // This could be any observable stream\n * const source = interval(1000);\n *\n * const result = source.pipe(\n *   takeUntil(timer(startOfNextMinute))\n * );\n *\n * result.subscribe(console.log);\n * ```\n *\n * ### Known Limitations\n *\n * - The {@link asyncScheduler} uses `setTimeout` which has limitations for how far in the future it can be scheduled.\n *\n * - If a `scheduler` is provided that returns a timestamp other than an epoch from `now()`, and\n * a `Date` object is passed to the `dueTime` argument, the calculation for when the first emission\n * should occur will be incorrect. In this case, it would be best to do your own calculations\n * ahead of time, and pass a `number` in as the `dueTime`.\n *\n * @param due If a `number`, the amount of time in milliseconds to wait before emitting.\n * If a `Date`, the exact time at which to emit.\n * @param scheduler The scheduler to use to schedule the delay. Defaults to {@link asyncScheduler}.\n */\nexport function timer(due: number | Date, scheduler?: SchedulerLike): Observable<0>;\n\n/**\n * Creates an observable that starts an interval after a specified delay, emitting incrementing numbers -- starting at `0` --\n * on each interval after words.\n *\n * The `delay` and `intervalDuration` are specified by default in milliseconds, however providing a custom scheduler could\n * create a different behavior.\n *\n * ## Example\n *\n * ### Start an interval that starts right away\n *\n * Since {@link interval} waits for the passed delay before starting,\n * sometimes that's not ideal. You may want to start an interval immediately.\n * `timer` works well for this. Here we have both side-by-side so you can\n * see them in comparison.\n *\n * Note that this observable will never complete.\n *\n * ```ts\n * import { timer, interval } from 'rxjs';\n *\n * timer(0, 1000).subscribe(n => console.log('timer', n));\n * interval(1000).subscribe(n => console.log('interval', n));\n * ```\n *\n * ### Known Limitations\n *\n * - The {@link asyncScheduler} uses `setTimeout` which has limitations for how far in the future it can be scheduled.\n *\n * - If a `scheduler` is provided that returns a timestamp other than an epoch from `now()`, and\n * a `Date` object is passed to the `dueTime` argument, the calculation for when the first emission\n * should occur will be incorrect. In this case, it would be best to do your own calculations\n * ahead of time, and pass a `number` in as the `startDue`.\n * @param startDue If a `number`, is the time to wait before starting the interval.\n * If a `Date`, is the exact time at which to start the interval.\n * @param intervalDuration The delay between each value emitted in the interval. Passing a\n * negative number here will result in immediate completion after the first value is emitted, as though\n * no `intervalDuration` was passed at all.\n * @param scheduler The scheduler to use to schedule the delay. Defaults to {@link asyncScheduler}.\n */\nexport function timer(startDue: number | Date, intervalDuration: number, scheduler?: SchedulerLike): Observable<number>;\n\n/**\n * @deprecated The signature allowing `undefined` to be passed for `intervalDuration` will be removed in v8. Use the `timer(dueTime, scheduler?)` signature instead.\n */\nexport function timer(dueTime: number | Date, unused: undefined, scheduler?: SchedulerLike): Observable<0>;\n\nexport function timer(\n  dueTime: number | Date = 0,\n  intervalOrScheduler?: number | SchedulerLike,\n  scheduler: SchedulerLike = asyncScheduler\n): Observable<number> {\n  // Since negative intervalDuration is treated as though no\n  // interval was specified at all, we start with a negative number.\n  let intervalDuration = -1;\n\n  if (intervalOrScheduler != null) {\n    // If we have a second argument, and it's a scheduler,\n    // override the scheduler we had defaulted. Otherwise,\n    // it must be an interval.\n    if (isScheduler(intervalOrScheduler)) {\n      scheduler = intervalOrScheduler;\n    } else {\n      // Note that this *could* be negative, in which case\n      // it's like not passing an intervalDuration at all.\n      intervalDuration = intervalOrScheduler;\n    }\n  }\n\n  return new Observable((subscriber) => {\n    // If a valid date is passed, calculate how long to wait before\n    // executing the first value... otherwise, if it's a number just schedule\n    // that many milliseconds (or scheduler-specified unit size) in the future.\n    let due = isValidDate(dueTime) ? +dueTime - scheduler!.now() : dueTime;\n\n    if (due < 0) {\n      // Ensure we don't schedule in the future.\n      due = 0;\n    }\n\n    // The incrementing value we emit.\n    let n = 0;\n\n    // Start the timer.\n    return scheduler.schedule(function () {\n      if (!subscriber.closed) {\n        // Emit the next value and increment.\n        subscriber.next(n++);\n\n        if (0 <= intervalDuration) {\n          // If we have a interval after the initial timer,\n          // reschedule with the period.\n          this.schedule(undefined, intervalDuration);\n        } else {\n          // We didn't have an interval. So just complete.\n          subscriber.complete();\n        }\n      }\n    }, due);\n  });\n}\n","/**\n * Checks to see if a value is not only a `Date` object,\n * but a *valid* `Date` object that can be converted to a\n * number. For example, `new Date('blah')` is indeed an\n * `instanceof Date`, however it cannot be converted to a\n * number.\n */\nexport function isValidDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(value as any);\n}\n","/*\n * SPDX-FileCopyrightText: 2024 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { OperatorFunction, timer } from 'rxjs';\nimport { retry } from 'rxjs/operators';\n\nimport { HttpErrorModel } from '../data/misc.model';\n\n/**\n * Options for the back-off operator.\n */\nexport interface BackOffOptions {\n  /**\n   * Function which evaluates if the given error should be handled exponentially.\n   *\n   * If it returns false, the error is re-thrown.\n   * Otherwise, the operation is retried.\n   */\n  shouldRetry?: (err: HttpErrorModel | Error) => boolean;\n\n  /** how many times to perform the back-off. Default value is 3 times. */\n  maxTries?: number;\n\n  /** delay in ms. Default value is 300ms. Assuming the maxTries is set to 3, it means the maximum time spent retrying will be: 1*1*300 + 2*2*300 + 3*3*300 = 4200ms (4.2s) */\n  delay?: number;\n}\n\n/**\n *\n * An operator which performs exponential back-off on the source stream.\n *\n * Source: https://angular.io/guide/practical-observable-usage#exponential-backoff\n *\n * @param options such as defining `maxTries`, or `delay`\n * @returns either the original error (if the given `errFn` return `false`), or the\n */\nexport function backOff<T>(options?: BackOffOptions): OperatorFunction<T, T> {\n  const shouldRetry = options?.shouldRetry ?? (() => true);\n  const maxTries = options?.maxTries ?? 3;\n  const delay = options?.delay ?? 300;\n\n  return (source$) =>\n    source$.pipe(\n      // retries the source stream in case of an error.\n      retry({\n        delay: (attemptError: HttpErrorModel | Error, currentRetry) => {\n          // if we've re-tried more than the maxTries, OR\n          // if the source error is not the one we want to exponentially retry\n          if (currentRetry > maxTries || !shouldRetry(attemptError)) {\n            throw attemptError;\n          }\n\n          // exponential\n          const exponent = currentRetry * currentRetry;\n          // back-off\n          return timer(exponent * delay);\n        },\n      })\n    );\n}\n","import { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { Subscription } from '../Subscription';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\nimport { timer } from '../observable/timer';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * The {@link retry} operator configuration object. `retry` either accepts a `number`\n * or an object described by this interface.\n */\nexport interface RetryConfig {\n  /**\n   * The maximum number of times to retry. If `count` is omitted, `retry` will try to\n   * resubscribe on errors infinite number of times.\n   */\n  count?: number;\n  /**\n   * The number of milliseconds to delay before retrying, OR a function to\n   * return a notifier for delaying. If a function is given, that function should\n   * return a notifier that, when it emits will retry the source. If the notifier\n   * completes _without_ emitting, the resulting observable will complete without error,\n   * if the notifier errors, the error will be pushed to the result.\n   */\n  delay?: number | ((error: any, retryCount: number) => ObservableInput<any>);\n  /**\n   * Whether or not to reset the retry counter when the retried subscription\n   * emits its first value.\n   */\n  resetOnSuccess?: boolean;\n}\n\nexport function retry<T>(count?: number): MonoTypeOperatorFunction<T>;\nexport function retry<T>(config: RetryConfig): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`.\n *\n * If the source Observable calls `error`, this method will resubscribe to the source Observable for a maximum of\n * `count` resubscriptions rather than propagating the `error` call.\n *\n * ![](retry.png)\n *\n * The number of retries is determined by the `count` parameter. It can be set either by passing a number to\n * `retry` function or by setting `count` property when `retry` is configured using {@link RetryConfig}. If\n * `count` is omitted, `retry` will try to resubscribe on errors infinite number of times.\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those\n * emitted during failed subscriptions. For example, if an Observable fails at first but emits `[1, 2]` then\n * succeeds the second time and emits: `[1, 2, 3, 4, 5, complete]` then the complete stream of emissions and\n * notifications would be: `[1, 2, 1, 2, 3, 4, 5, complete]`.\n *\n * ## Example\n *\n * ```ts\n * import { interval, mergeMap, throwError, of, retry } from 'rxjs';\n *\n * const source = interval(1000);\n * const result = source.pipe(\n *   mergeMap(val => val > 5 ? throwError(() => 'Error!') : of(val)),\n *   retry(2) // retry 2 times on error\n * );\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   error: err => console.log(`${ err }: Retried 2 times then quit!`)\n * });\n *\n * // Output:\n * // 0..1..2..3..4..5..\n * // 0..1..2..3..4..5..\n * // 0..1..2..3..4..5..\n * // 'Error!: Retried 2 times then quit!'\n * ```\n *\n * @see {@link retryWhen}\n *\n * @param configOrCount - Either number of retry attempts before failing or a {@link RetryConfig} object.\n * @return A function that returns an Observable that will resubscribe to the\n * source stream when the source stream errors, at most `count` times.\n */\nexport function retry<T>(configOrCount: number | RetryConfig = Infinity): MonoTypeOperatorFunction<T> {\n  let config: RetryConfig;\n  if (configOrCount && typeof configOrCount === 'object') {\n    config = configOrCount;\n  } else {\n    config = {\n      count: configOrCount as number,\n    };\n  }\n  const { count = Infinity, delay, resetOnSuccess: resetOnSuccess = false } = config;\n\n  return count <= 0\n    ? identity\n    : operate((source, subscriber) => {\n        let soFar = 0;\n        let innerSub: Subscription | null;\n        const subscribeForRetry = () => {\n          let syncUnsub = false;\n          innerSub = source.subscribe(\n            createOperatorSubscriber(\n              subscriber,\n              (value) => {\n                // If we're resetting on success\n                if (resetOnSuccess) {\n                  soFar = 0;\n                }\n                subscriber.next(value);\n              },\n              // Completions are passed through to consumer.\n              undefined,\n              (err) => {\n                if (soFar++ < count) {\n                  // We are still under our retry count\n                  const resub = () => {\n                    if (innerSub) {\n                      innerSub.unsubscribe();\n                      innerSub = null;\n                      subscribeForRetry();\n                    } else {\n                      syncUnsub = true;\n                    }\n                  };\n\n                  if (delay != null) {\n                    // The user specified a retry delay.\n                    // They gave us a number, use a timer, otherwise, it's a function,\n                    // and we're going to call it to get a notifier.\n                    const notifier = typeof delay === 'number' ? timer(delay) : innerFrom(delay(err, soFar));\n                    const notifierSubscriber = createOperatorSubscriber(\n                      subscriber,\n                      () => {\n                        // After we get the first notification, we\n                        // unsubscribe from the notifier, because we don't want anymore\n                        // and we resubscribe to the source.\n                        notifierSubscriber.unsubscribe();\n                        resub();\n                      },\n                      () => {\n                        // The notifier completed without emitting.\n                        // The author is telling us they want to complete.\n                        subscriber.complete();\n                      }\n                    );\n                    notifier.subscribe(notifierSubscriber);\n                  } else {\n                    // There was no notifier given. Just resub immediately.\n                    resub();\n                  }\n                } else {\n                  // We're past our maximum number of retries.\n                  // Just send along the error.\n                  subscriber.error(err);\n                }\n              }\n            )\n          );\n          if (syncUnsub) {\n            innerSub.unsubscribe();\n            innerSub = null;\n            subscribeForRetry();\n          }\n        };\n        subscribeForRetry();\n      });\n}\n","export class Constant {\n  public static OPF_ENDPOINTS = class {\n    public static readonly INITIATE = 'payments';\n    public static readonly VERIFY = 'payments/${paymentSessionId}/verify';\n    public static readonly SUBMIT = 'payments/${paymentSessionId}/submit';\n    public static readonly SUBMIT_COMPLETE =\n      'payments/${paymentSessionId}/submit-complete';\n    public static readonly REDIRECT_SCRIPTS =\n      'payments/${paymentSessionId}/after-redirect-scripts';\n  };\n\n  public static CCV2_ENDPOINTS = class {\n    public static readonly ACCESS_CODE =\n      'users/${userId}/carts/${cartId}/accessCode';\n  };\n\n  public static HTTP_KEY = class {\n    public static readonly OPF_CC_PUBLIC_KEY_HEADER =\n      'sap-commerce-cloud-public-key';\n    public static readonly OPF_CC_ACCESS_CODE_HEADER =\n      'sap-commerce-cloud-access-code';\n  };\n\n  public static GLOBAL = class {\n    public static readonly PAYMENTS = 'payments';\n    public static readonly CHECKOUT = 'checkout';\n    public static readonly REDIRECT = 'redirect';\n    public static readonly INFO = 'info';\n  };\n\n  public static LIB_TEXTS = class {\n    public static readonly LIB_NAME = 'opf-pay-sdk';\n    public static readonly LIB_VERSION = '1.0.0-SDK';\n\n    public static readonly OPF_SDK_INITIALIZED = 'OpfSdk initialized';\n    public static readonly OPF_CFG_NOT_INITIALIZED =\n      'ConfigService is not initialized';\n    public static readonly CALLBACK_NOT_INITIALIZED =\n      'Callback is not initialized';\n  };\n}\n","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({source, data}) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n\n    return (cb) => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    }\n  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);\n})(\n  typeof setImmediate === 'function',\n  isFunction(_global.postMessage)\n);\n\nconst asap = typeof queueMicrotask !== 'undefined' ?\n  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);\n\n// *********************\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  if (response) {\n    this.response = response;\n    this.status = response.status ? response.status : null;\n  }\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.status\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst _navigator = typeof navigator === 'object' && navigator || undefined;\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = hasBrowserEnv &&\n  (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv,\n  _navigator as navigator,\n  origin\n}\n","import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data) ||\n      utils.isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (utils.isResponse(data) || utils.isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else if (utils.isHeaders(header)) {\n      for (const [key, value] of header.entries()) {\n        setHeader(value, key, rewrite);\n      }\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","import speedometer from \"./speedometer.js\";\nimport throttle from \"./throttle.js\";\nimport utils from \"../utils.js\";\n\nexport const progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n\n    listener(data);\n  }, freq);\n}\n\nexport const progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n\n  return [(loaded) => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n}\n\nexport const asyncDecorator = (fn) => (...args) => utils.asap(() => fn(...args));\n","/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  let threshold = 1000 / freq;\n  let lastArgs;\n  let timer;\n\n  const invoke = (args, now = Date.now()) => {\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn.apply(null, args);\n  }\n\n  const throttled = (...args) => {\n    const now = Date.now();\n    const passed = now - timestamp;\n    if ( passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(() => {\n          timer = null;\n          invoke(lastArgs)\n        }, threshold - passed);\n      }\n    }\n  }\n\n  const flush = () => lastArgs && invoke(lastArgs);\n\n  return [throttled, flush];\n}\n\nexport default throttle;\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover its components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n","import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport isURLSameOrigin from \"./isURLSameOrigin.js\";\nimport cookies from \"./cookies.js\";\nimport buildFullPath from \"../core/buildFullPath.js\";\nimport mergeConfig from \"../core/mergeConfig.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport buildURL from \"./buildURL.js\";\n\nexport default (config) => {\n  const newConfig = mergeConfig({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = AxiosHeaders.from(headers);\n\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  let contentType;\n\n  if (utils.isFormData(data)) {\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (platform.hasStandardBrowserEnv) {\n    withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n}\n\n","import utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport {progressEventReducer} from '../helpers/progressEventReducer.js';\nimport resolveConfig from \"../helpers/resolveConfig.js\";\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders.from(_config.headers).normalize();\n    let {responseType, onUploadProgress, onDownloadProgress} = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      ([downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true));\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      ([uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress));\n\n      request.upload.addEventListener('progress', uploadThrottled);\n\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(_config.url);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","import CanceledError from \"../cancel/CanceledError.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport utils from '../utils.js';\n\nconst composeSignals = (signals, timeout) => {\n  const {length} = (signals = signals ? signals.filter(Boolean) : []);\n\n  if (timeout || length) {\n    let controller = new AbortController();\n\n    let aborted;\n\n    const onabort = function (reason) {\n      if (!aborted) {\n        aborted = true;\n        unsubscribe();\n        const err = reason instanceof Error ? reason : this.reason;\n        controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));\n      }\n    }\n\n    let timer = timeout && setTimeout(() => {\n      timer = null;\n      onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT))\n    }, timeout)\n\n    const unsubscribe = () => {\n      if (signals) {\n        timer && clearTimeout(timer);\n        timer = null;\n        signals.forEach(signal => {\n          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);\n        });\n        signals = null;\n      }\n    }\n\n    signals.forEach((signal) => signal.addEventListener('abort', onabort));\n\n    const {signal} = controller;\n\n    signal.unsubscribe = () => utils.asap(unsubscribe);\n\n    return signal;\n  }\n}\n\nexport default composeSignals;\n","\nexport const streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nexport const readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n}\n\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {done, value} = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n}\n\nexport const trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  }\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport composeSignals from \"../helpers/composeSignals.js\";\nimport {trackStream} from \"../helpers/trackStream.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport {progressEventReducer, progressEventDecorator, asyncDecorator} from \"../helpers/progressEventReducer.js\";\nimport resolveConfig from \"../helpers/resolveConfig.js\";\nimport settle from \"../core/settle.js\";\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false\n  }\n}\n\nconst supportsRequestStream = isReadableStreamSupported && test(() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n});\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported &&\n  test(() => utils.isReadableStream(new Response('').body));\n\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = utils.isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n      })\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(utils.isBlob(body)) {\n    return body.size;\n  }\n\n  if(utils.isSpecCompliantForm(body)) {\n    const _request = new Request(platform.origin, {\n      method: 'POST',\n      body,\n    });\n    return (await _request.arrayBuffer()).byteLength;\n  }\n\n  if(utils.isArrayBufferView(body) || utils.isArrayBuffer(body)) {\n    return body.byteLength;\n  }\n\n  if(utils.isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(utils.isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n}\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = utils.toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n}\n\nexport default isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = resolveConfig(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let composedSignal = composeSignals([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\n\n  let request;\n\n  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {\n      composedSignal.unsubscribe();\n  });\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (utils.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader)\n      }\n\n      if (_request.body) {\n        const [onProgress, flush] = progressEventDecorator(\n          requestContentLength,\n          progressEventReducer(asyncDecorator(onUploadProgress))\n        );\n\n        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\n      }\n    }\n\n    if (!utils.isString(withCredentials)) {\n      withCredentials = withCredentials ? 'include' : 'omit';\n    }\n\n    // Cloudflare Workers throws when credentials are defined\n    // see https://github.com/cloudflare/workerd/issues/902\n    const isCredentialsSupported = \"credentials\" in Request.prototype;\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      credentials: isCredentialsSupported ? withCredentials : undefined\n    });\n\n    let response = await fetch(request);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || (isStreamResponse && unsubscribe))) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = utils.toFiniteNumber(response.headers.get('content-length'));\n\n      const [onProgress, flush] = onDownloadProgress && progressEventDecorator(\n        responseContentLength,\n        progressEventReducer(asyncDecorator(onDownloadProgress), true)\n      ) || [];\n\n      response = new Response(\n        trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n          flush && flush();\n          unsubscribe && unsubscribe();\n        }),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[utils.findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && unsubscribe && unsubscribe();\n\n    return await new Promise((resolve, reject) => {\n      settle(resolve, reject, {\n        data: responseData,\n        headers: AxiosHeaders.from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      })\n    })\n  } catch (err) {\n    unsubscribe && unsubscribe();\n\n    if (err && err.name === 'TypeError' && /fetch/i.test(err.message)) {\n      throw Object.assign(\n        new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw AxiosError.from(err, err && err.code, config, request);\n  }\n});\n\n\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport fetchAdapter from './fetch.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter,\n  fetch: fetchAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","export const VERSION = \"1.7.7\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy;\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy = {}) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  toAbortSignal() {\n    const controller = new AbortController();\n\n    const abort = (err) => {\n      controller.abort(err);\n    };\n\n    this.subscribe(abort);\n\n    controller.signal.unsubscribe = () => this.unsubscribe(abort);\n\n    return controller.signal;\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","import axios from './lib/axios.js';\n\n// This module is intended to unwrap Axios default export as named.\n// Keep top-level export same with static properties\n// so that it can keep same with es module or cjs\nconst {\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n} = axios;\n\nexport {\n  axios as default,\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n}\n","import { HttpStatusCode } from 'axios';\n\nimport { FailureRedirectionCallback } from '../data';\nimport { HttpErrorModel } from '../data/misc.model';\nimport {\n  OpfPaymentError,\n  PaymentBrowserInfo,\n  PaymentErrorType,\n} from '../data/submit-payment.model';\n\nexport function getBrowserInfo(\n  nativeWindow: Window | undefined\n): PaymentBrowserInfo {\n  return {\n    acceptHeader: 'application/json',\n    colorDepth: nativeWindow?.screen?.colorDepth,\n    javaEnabled: false,\n    javaScriptEnabled: true,\n    language: nativeWindow?.navigator?.language,\n    screenHeight: nativeWindow?.screen?.height,\n    screenWidth: nativeWindow?.screen?.width,\n    userAgent: nativeWindow?.navigator?.userAgent,\n    originUrl: nativeWindow?.location?.origin,\n    // eslint-disable-next-line prettier/prettier\n    timeZoneOffset: new Date().getTimezoneOffset()\n  };\n}\n\nexport function isJaloError(err: HttpErrorModel): boolean {\n  return err.details?.[0]?.type === 'JaloObjectNoLongerValidError';\n}\n\nexport function isAuthorizationError(err: HttpErrorModel): boolean {\n  return !!err?.status && err.status === 401;\n}\n\nexport function isServerError(err: HttpErrorModel): boolean {\n  return !!err?.status && err.status >= 500 && err.status <= 511;\n}\n\nexport function defaultError(): OpfPaymentError {\n  return {\n    statusText: 'Payment Error',\n    message: 'opfPayment.errors.proceedPayment',\n    status: -1,\n    type: '',\n  };\n}\n\nexport function handlePayError(\n  error: any,\n  returnPath?: string,\n  failureRedirectionCallback?: FailureRedirectionCallback\n): OpfPaymentError {\n  const payError = defaultError();\n  if (error?.status === HttpStatusCode.BadRequest) {\n    payError.message = handleBadRequestError(error?.type);\n  } else if (error?.type === PaymentErrorType.PAYMENT_CANCELLED) {\n    payError.message = 'opfPayment.errors.cancelPayment';\n  }\n  if (returnPath?.length && failureRedirectionCallback) {\n    console.log(returnPath); //To Be Removed\n    failureRedirectionCallback();\n  }\n  return payError;\n}\n\nexport function handleBadRequestError(errorType?: string): string {\n  switch (errorType) {\n    case PaymentErrorType.EXPIRED:\n      return 'opfPayment.errors.cardExpired';\n    case PaymentErrorType.INSUFFICENT_FUNDS:\n    case PaymentErrorType.CREDIT_LIMIT:\n      return 'opfPayment.errors.insufficientFunds';\n    case PaymentErrorType.INVALID_CARD:\n    case PaymentErrorType.INVALID_CVV:\n      return 'opfPayment.errors.invalidCreditCard';\n    case PaymentErrorType.LOST_CARD:\n      return 'opfPayment.errors.cardReportedLost';\n    default:\n      return 'unknown error';\n  }\n}\n","import axios, {\n  AxiosError,\n  AxiosInstance,\n  AxiosResponse,\n  HttpStatusCode,\n  InternalAxiosRequestConfig,\n} from 'axios';\nimport { Observable, from } from 'rxjs';\n\nimport { Logger } from './lib-logger';\nimport { CommonConfig } from '../config/common.config';\n\nexport enum CallType {\n  OPF = 'opf',\n  COMMERCE_CLOUD = 'ccv2',\n}\n\nexport interface DynamicAttributes {\n  urlParams?: object;\n  queryParams?: object;\n  scope?: string;\n}\n\nexport class SdkHttpUtil {\n  public static readonly NAME = 'SdkHttpUtil';\n  private readonly _logger: Logger;\n  private axiosInstance: AxiosInstance;\n  private configService: CommonConfig;\n\n  constructor(type: CallType, configService: CommonConfig, params?: any) {\n    this._logger = new Logger(SdkHttpUtil.NAME);\n    this.configService = configService;\n    this.axiosInstance = axios.create({\n      baseURL:\n        type == CallType.OPF\n          ? this.configService.opfBaseUrl\n          : this.configService.ccv2BaseUrl,\n      headers: params,\n    });\n\n    // Add request interceptor\n    this.axiosInstance.interceptors.request.use(\n      (config: InternalAxiosRequestConfig) => {\n        // modify the request config here if needed\n        return config;\n      },\n      (error: AxiosError) => {\n        // Handle request error\n        this._logger.error('Request error:' + error);\n        return Promise.reject(error);\n      }\n    );\n\n    // Add response interceptor\n    this.axiosInstance.interceptors.response.use(\n      (response: AxiosResponse) => {\n        // Any status code that lie within the range of 2xx cause this function to trigger\n        return response;\n      },\n      (error: AxiosError) => {\n        // Any status codes that falls outside the range of 2xx cause this function to trigger\n        // Handle specific error statuses here\n        if (error.response) {\n          switch (error.response.status) {\n            case HttpStatusCode.BadRequest:\n              this._logger.error('Bad Request - perhaps payload is invalid?');\n              break;\n            case HttpStatusCode.Unauthorized:\n              this._logger.error(\n                'Unauthorized access - perhaps you need to log in?'\n              );\n              break;\n            case HttpStatusCode.Forbidden:\n              this._logger.error(\n                'Forbidden - you do not have permission to access this resource.'\n              );\n              break;\n            case HttpStatusCode.NotFound:\n              this._logger.error('Resource not found.');\n              break;\n            case HttpStatusCode.InternalServerError:\n              this._logger.error('Internal server error.');\n              break;\n            default:\n              this._logger.error('An error occurred:' + error.message);\n          }\n        }\n        return Promise.reject(error.response?.data);\n      }\n    );\n  }\n\n  get<T>(endpoint: string, attributes?: DynamicAttributes): Observable<T> {\n    const url = this.buildUrl(endpoint, attributes);\n    return from(\n      this.axiosInstance.get<T>(url).then((response) => response.data)\n    );\n  }\n\n  post<T>(\n    endpoint: string,\n    attributes?: DynamicAttributes,\n    data?: any\n  ): Observable<T> {\n    const url = this.buildUrl(endpoint, attributes);\n    return from(\n      this.axiosInstance.post<T>(url, data).then((response) => response.data)\n    );\n  }\n\n  put<T>(\n    endpoint: string,\n    data: any,\n    attributes?: DynamicAttributes\n  ): Observable<T> {\n    const url = this.buildUrl(endpoint, attributes);\n    return from(\n      this.axiosInstance.put<T>(url, data).then((response) => response.data)\n    );\n  }\n\n  delete<T>(endpoint: string, attributes?: DynamicAttributes): Observable<T> {\n    const url = this.buildUrl(endpoint, attributes);\n    return from(\n      this.axiosInstance.delete<T>(url).then((response) => response.data)\n    );\n  }\n\n  private buildUrl(endpoint: string, attributes?: DynamicAttributes): string {\n    if (attributes) {\n      const { urlParams } = attributes;\n\n      if (urlParams && endpoint) {\n        endpoint = this.resolve(endpoint, urlParams, true);\n      }\n    }\n\n    return `/${this.configService.baseSiteId}/${endpoint}`;\n  }\n\n  private resolve(\n    templateString: string,\n    templateVariables: object,\n    encodeVariable?: boolean\n  ): string {\n    for (const variableLabel of Object.keys(templateVariables)) {\n      const placeholder = new RegExp('\\\\${' + variableLabel + '}', 'g');\n      templateString = templateString.replace(\n        placeholder,\n        encodeVariable\n          ? encodeURIComponent(templateVariables[variableLabel as keyof object])\n          : templateVariables[variableLabel as keyof object]\n      );\n    }\n    return templateString;\n  }\n}\n","import {\n  EMPTY,\n  Observable,\n  catchError,\n  combineLatest,\n  concatMap,\n  from,\n  map,\n  of,\n  tap,\n  throwError,\n} from 'rxjs';\n\nimport { backOff } from '../../common/back-off';\nimport { Constant } from '../../common/constant';\nimport { Logger } from '../../common/lib-logger';\nimport {\n  defaultError,\n  getBrowserInfo,\n  handlePayError,\n  isAuthorizationError,\n} from '../../common/payment-utils';\nimport { CallType, SdkHttpUtil } from '../../common/sdk-http.util';\nimport { CommonConfig } from '../../config';\nimport {\n  AccessCodeCallback,\n  FailureRedirectionCallback,\n  OrderPlacementCallback,\n  SuccessRedirectionCallback,\n} from '../../data';\nimport {\n  MerchantCallback,\n  PaymentErrorType,\n  PaymentMethod,\n  SubmitCompleteResponse,\n  SubmitInput,\n  SubmitRequest,\n  SubmitResponse,\n  SubmitStatus,\n} from '../../data/submit-payment.model';\nimport { OpfSdkApi } from '../../opf-sdk.api';\n\nexport class SubmitPayment {\n  private static readonly NAME = 'SubmitPayment';\n  private readonly _window: Window;\n  private readonly _logger: Logger;\n  private _commonConfig: CommonConfig;\n\n  private _accessCodeCallback: AccessCodeCallback;\n  private _orderPlacementCallback: OrderPlacementCallback;\n  private _successRedirectionCallback: SuccessRedirectionCallback;\n  private _failureRedirectionCallback: FailureRedirectionCallback;\n\n  constructor(opfsdk: OpfSdkApi) {\n    this._window = window;\n    this._logger = new Logger(SubmitPayment.NAME);\n    this._commonConfig = opfsdk.getCommonConfig();\n\n    this._accessCodeCallback = opfsdk.getAccessCodeCallback();\n    this._orderPlacementCallback = opfsdk.getOrderPlacementCallback();\n    this._successRedirectionCallback = opfsdk.getSuccessRedirectionCallback();\n    this._failureRedirectionCallback = opfsdk.getFailureRedirectionCallback();\n  }\n\n  public submitPayment(submitInput: SubmitInput): Observable<boolean> {\n    const {\n      paymentMethod,\n      cartId,\n      additionalData,\n      paymentSessionId,\n      encryptedToken,\n      // eslint-disable-next-line prettier/prettier\n      returnPath\n    } = submitInput;\n\n    const submitRequest: SubmitRequest = {\n      paymentMethod,\n      cartId,\n      additionalData,\n      channel: 'BROWSER',\n      browserInfo: getBrowserInfo(this._window),\n    };\n    if (paymentMethod !== PaymentMethod.CREDIT_CARD) {\n      submitRequest.encryptedToken = '';\n    }\n    if (encryptedToken) {\n      submitRequest.encryptedToken = encryptedToken;\n    }\n    this._logger.info('Submit Payment Request > ' + submitRequest);\n\n    return combineLatest([\n      of(submitRequest),\n      of(this._accessCodeCallback(submitRequest)),\n    ]).pipe(\n      concatMap(([request, { accessCode: otpKey }]) =>\n        this.callSubmitPayment(request, otpKey, paymentSessionId as string)\n      ),\n      concatMap((response: SubmitResponse) =>\n        this.paymentResponseHandler(response, submitInput.callbackArray)\n      ),\n      tap((order: any) => {\n        if (order) {\n          this._successRedirectionCallback();\n        }\n      }),\n      map((order: any) => (order ? true : false)),\n      catchError((error: any) => {\n        return throwError(() =>\n          handlePayError(error, returnPath, this._failureRedirectionCallback)\n        );\n      }),\n      backOff({\n        /**\n         * We should retry this sequence only if the error is an authorization error.\n         * It means that `accessCode` (OTP signature) is not valid or expired and we need to refresh it.\n         */\n        shouldRetry: isAuthorizationError,\n        maxTries: this._commonConfig.defaultAuthorizationErrorRetriesCount,\n      })\n    );\n  }\n\n  private paymentResponseHandler(\n    response: SubmitResponse | SubmitCompleteResponse,\n    [submitSuccess, submitPending, submitFailure]: [\n      MerchantCallback,\n      MerchantCallback,\n      MerchantCallback,\n    ]\n  ): Observable<any> {\n    //Must return Order - Schema as per CCV2 , shall be documents but not available in codebase\n    if (\n      response.status === SubmitStatus.ACCEPTED ||\n      response.status === SubmitStatus.DELAYED\n    ) {\n      return from(Promise.resolve(submitSuccess(response))).pipe(\n        concatMap(() => of(this._orderPlacementCallback(true)))\n      );\n    } else if (response.status === SubmitStatus.PENDING) {\n      return from(Promise.resolve(submitPending(response))).pipe(\n        concatMap(() => EMPTY)\n      );\n    } else if (response.status === SubmitStatus.REJECTED) {\n      return from(Promise.resolve(submitFailure(response))).pipe(\n        concatMap(() =>\n          throwError(() => {\n            return {\n              ...defaultError(),\n              type: PaymentErrorType.PAYMENT_REJECTED,\n            };\n          })\n        )\n      );\n    } else {\n      return from(Promise.resolve(submitFailure(response))).pipe(\n        concatMap(() =>\n          throwError(() => {\n            return {\n              ...defaultError(),\n              type: PaymentErrorType.STATUS_NOT_RECOGNIZED,\n            };\n          })\n        )\n      );\n    }\n  }\n\n  private callSubmitPayment(\n    submitRequest: SubmitRequest,\n    otpKey: string,\n    paymentSessionId: string\n  ): Observable<SubmitResponse> {\n    const headers = {\n      ...this._header,\n      [Constant.HTTP_KEY.OPF_CC_PUBLIC_KEY_HEADER]:\n        this._commonConfig.commerceCloudPublicKey,\n      [Constant.HTTP_KEY.OPF_CC_ACCESS_CODE_HEADER]: otpKey || '',\n    };\n\n    const http = new SdkHttpUtil(CallType.OPF, this._commonConfig, headers);\n    return http.post<SubmitResponse>(\n      Constant.OPF_ENDPOINTS.SUBMIT,\n      { urlParams: { paymentSessionId } },\n      submitRequest\n    );\n  }\n\n  private _headerWithNoLanguage: { [name: string]: string } = {\n    accept: 'application/json',\n    'Content-Type': 'application/json',\n  };\n  private _header: { [name: string]: string } = {\n    ...this._headerWithNoLanguage,\n    'Accept-Language': 'en-us',\n  };\n}\n","import {\n  EMPTY,\n  Observable,\n  catchError,\n  combineLatest,\n  concatMap,\n  from,\n  map,\n  of,\n  tap,\n  throwError,\n} from 'rxjs';\n\nimport { backOff } from '../../common/back-off';\nimport { Constant } from '../../common/constant';\nimport { Logger } from '../../common/lib-logger';\nimport {\n  defaultError,\n  handlePayError,\n  isAuthorizationError,\n} from '../../common/payment-utils';\nimport { CallType, SdkHttpUtil } from '../../common/sdk-http.util';\nimport { CommonConfig } from '../../config';\nimport {\n  AccessCodeCallback,\n  FailureRedirectionCallback,\n  OrderPlacementCallback,\n  SuccessRedirectionCallback,\n} from '../../data';\nimport {\n  MerchantCallback,\n  PaymentErrorType,\n  SubmitCompleteInput,\n  SubmitCompleteRequest,\n  SubmitCompleteResponse,\n  SubmitResponse,\n  SubmitStatus,\n} from '../../data/submit-payment.model';\nimport { OpfSdkApi } from '../../opf-sdk.api';\n\nexport class SubmitCompletePayment {\n  private static readonly NAME = 'SubmitCompletePayment';\n  private readonly _logger: Logger;\n  private _commonConfig: CommonConfig;\n\n  private _accessCodeCallback: AccessCodeCallback;\n  private _orderPlacementCallback: OrderPlacementCallback;\n  private _successRedirectionCallback: SuccessRedirectionCallback;\n  private _failureRedirectionCallback: FailureRedirectionCallback;\n\n  constructor(opfsdk: OpfSdkApi) {\n    this._logger = new Logger(SubmitCompletePayment.NAME);\n    this._commonConfig = opfsdk.getCommonConfig();\n\n    this._accessCodeCallback = opfsdk.getAccessCodeCallback();\n    this._orderPlacementCallback = opfsdk.getOrderPlacementCallback();\n    this._successRedirectionCallback = opfsdk.getSuccessRedirectionCallback();\n    this._failureRedirectionCallback = opfsdk.getFailureRedirectionCallback();\n  }\n\n  public submitCompletePayment(\n    submitCompleteInput: SubmitCompleteInput\n  ): Observable<boolean> {\n    const { cartId, additionalData, paymentSessionId, returnPath } =\n      submitCompleteInput;\n\n    const submitCompleteRequest: SubmitCompleteRequest = {\n      cartId,\n      additionalData,\n      paymentSessionId,\n    };\n    this._logger.info(\n      'Submit-Complete Payment Request > ' + submitCompleteRequest\n    );\n\n    return combineLatest([\n      of(submitCompleteRequest),\n      of(this._accessCodeCallback(submitCompleteRequest)),\n    ]).pipe(\n      concatMap(([request, { accessCode: otpKey }]) =>\n        this.callSubmitCompletePayment(\n          request,\n          otpKey,\n          paymentSessionId as string\n        )\n      ),\n      concatMap((response: SubmitCompleteResponse) =>\n        this.paymentResponseHandler(response, submitCompleteInput.callbackArray)\n      ),\n      tap((order: any) => {\n        if (order) {\n          this._successRedirectionCallback();\n        }\n      }),\n      map((order: any) => (order ? true : false)),\n      catchError((error: any) => {\n        return throwError(() =>\n          handlePayError(error, returnPath, this._failureRedirectionCallback)\n        );\n      }),\n      backOff({\n        /**\n         * We should retry this sequence only if the error is an authorization error.\n         * It means that `accessCode` (OTP signature) is not valid or expired and we need to refresh it.\n         */\n        shouldRetry: isAuthorizationError,\n        maxTries: this._commonConfig.defaultAuthorizationErrorRetriesCount,\n      })\n    );\n  }\n\n  private paymentResponseHandler(\n    response: SubmitResponse | SubmitCompleteResponse,\n    [submitSuccess, submitPending, submitFailure]: [\n      MerchantCallback,\n      MerchantCallback,\n      MerchantCallback,\n    ]\n  ): Observable<any> {\n    //Must return Order - Schema as per CCV2 , shall be documents but not available in codebase\n    if (\n      response.status === SubmitStatus.ACCEPTED ||\n      response.status === SubmitStatus.DELAYED\n    ) {\n      return from(Promise.resolve(submitSuccess(response))).pipe(\n        concatMap(() => of(this._orderPlacementCallback(true)))\n      );\n    } else if (response.status === SubmitStatus.PENDING) {\n      return from(Promise.resolve(submitPending(response))).pipe(\n        concatMap(() => EMPTY)\n      );\n    } else if (response.status === SubmitStatus.REJECTED) {\n      return from(Promise.resolve(submitFailure(response))).pipe(\n        concatMap(() =>\n          throwError(() => {\n            return {\n              ...defaultError(),\n              type: PaymentErrorType.PAYMENT_REJECTED,\n            };\n          })\n        )\n      );\n    } else {\n      return from(Promise.resolve(submitFailure(response))).pipe(\n        concatMap(() =>\n          throwError(() => {\n            return {\n              ...defaultError(),\n              type: PaymentErrorType.STATUS_NOT_RECOGNIZED,\n            };\n          })\n        )\n      );\n    }\n  }\n\n  private callSubmitCompletePayment(\n    submitCompleteRequest: SubmitCompleteRequest,\n    otpKey: string,\n    paymentSessionId: string\n  ): Observable<SubmitCompleteResponse> {\n    const headers = {\n      ...this._headerWithContentLanguage,\n      [Constant.HTTP_KEY.OPF_CC_PUBLIC_KEY_HEADER]:\n        this._commonConfig.commerceCloudPublicKey,\n      [Constant.HTTP_KEY.OPF_CC_ACCESS_CODE_HEADER]: otpKey || '',\n    };\n\n    const http = new SdkHttpUtil(CallType.OPF, this._commonConfig, headers);\n    return http.post<SubmitCompleteResponse>(\n      Constant.OPF_ENDPOINTS.SUBMIT_COMPLETE,\n      { urlParams: { paymentSessionId } },\n      submitCompleteRequest\n    );\n  }\n\n  private _headerWithNoLanguage: { [name: string]: string } = {\n    accept: 'application/json',\n    'Content-Type': 'application/json',\n  };\n  private _header: { [name: string]: string } = {\n    ...this._headerWithNoLanguage,\n    'Accept-Language': 'en-us',\n  };\n\n  private _headerWithContentLanguage: { [name: string]: string } = {\n    ...this._headerWithNoLanguage,\n    'Content-Language': 'en-us',\n  };\n}\n","import { Constant } from './constant';\n\ndeclare global {\n  interface Window {\n    // eslint-disable-next-line\n    Opf: any;\n  }\n}\n\nexport interface BuildInfo {\n  readonly name: string;\n  readonly version: string;\n}\n\nexport class LibInfo {\n  public static getBuildInfo(): BuildInfo {\n    return {\n      name: Constant.LIB_TEXTS.LIB_NAME,\n      version: Constant.LIB_TEXTS.LIB_VERSION,\n    };\n  }\n\n  public static getBuildInfoString(): string {\n    return `${this.getBuildInfo().name}/${this.getBuildInfo().version}`;\n  }\n\n  public static getGlobalBuildInfo(): string {\n    const globalInfoValue = LibInfo.getGlobalContextValue(\n      Constant.GLOBAL.PAYMENTS,\n      Constant.GLOBAL.INFO\n    );\n    if (globalInfoValue && globalInfoValue.sdk) {\n      return globalInfoValue.sdk;\n    }\n    return this.getBuildInfoString();\n  }\n\n  public static setGlobalData() {\n    const globalInfo = LibInfo.ensureGlobalContext(\n      Constant.GLOBAL.PAYMENTS,\n      Constant.GLOBAL.INFO\n    );\n    globalInfo.sdk = this.getBuildInfoString();\n    LibInfo.ensureGlobalContext(\n      Constant.GLOBAL.PAYMENTS,\n      Constant.GLOBAL.CHECKOUT\n    );\n    LibInfo.ensureGlobalContext(\n      Constant.GLOBAL.PAYMENTS,\n      Constant.GLOBAL.REDIRECT\n    );\n  }\n\n  public static getGlobalPaymentCheckout(): any | undefined {\n    return LibInfo.getGlobalContextValue(\n      Constant.GLOBAL.PAYMENTS,\n      Constant.GLOBAL.CHECKOUT\n    );\n  }\n\n  public static getGlobalPaymentRedirect(): any | undefined {\n    return LibInfo.getGlobalContextValue(\n      Constant.GLOBAL.PAYMENTS,\n      Constant.GLOBAL.REDIRECT\n    );\n  }\n\n  public static removeGlobalData() {\n    if (window?.Opf?.payments) {\n      window.Opf.payments = undefined;\n    }\n  }\n\n  private static getGlobalContextValue(\n    firstLevel?: string,\n    secondLevel?: string\n  ): any | undefined {\n    if (window.Opf) {\n      if (firstLevel && !secondLevel) {\n        return window.Opf[firstLevel] || undefined;\n      }\n      if (firstLevel && secondLevel && window.Opf[firstLevel]) {\n        return window.Opf[firstLevel][secondLevel] || undefined;\n      }\n    }\n    return undefined;\n  }\n\n  private static ensureGlobalContext(\n    firstLevel?: string,\n    secondLevel?: string\n  ): any {\n    if (!window.Opf) {\n      window.Opf = {};\n    }\n    if (firstLevel) {\n      if (!window.Opf[firstLevel]) {\n        window.Opf[firstLevel] = {};\n      }\n      const createdFirstLevel = window.Opf[firstLevel];\n      if (secondLevel) {\n        if (!createdFirstLevel[secondLevel]) {\n          createdFirstLevel[secondLevel] = {};\n        }\n        return createdFirstLevel[secondLevel];\n      }\n      return createdFirstLevel;\n    }\n    return window.Opf;\n  }\n}\n","import { createErrorClass } from './createErrorClass';\n\nexport interface EmptyError extends Error {}\n\nexport interface EmptyErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): EmptyError;\n}\n\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n * @see {@link firstValueFrom}\n * @see {@link lastValueFrom}\n *\n * @class EmptyError\n */\nexport const EmptyError: EmptyErrorCtor = createErrorClass((_super) => function EmptyErrorImpl(this: any) {\n  _super(this);\n  this.name = 'EmptyError';\n  this.message = 'no elements in sequence';\n});\n","import { Observable } from './Observable';\nimport { EmptyError } from './util/EmptyError';\n\nexport interface LastValueFromConfig<T> {\n  defaultValue: T;\n}\n\nexport function lastValueFrom<T, D>(source: Observable<T>, config: LastValueFromConfig<D>): Promise<T | D>;\nexport function lastValueFrom<T>(source: Observable<T>): Promise<T>;\n\n/**\n * Converts an observable to a promise by subscribing to the observable,\n * waiting for it to complete, and resolving the returned promise with the\n * last value from the observed stream.\n *\n * If the observable stream completes before any values were emitted, the\n * returned promise will reject with {@link EmptyError} or will resolve\n * with the default value if a default was specified.\n *\n * If the observable stream emits an error, the returned promise will reject\n * with that error.\n *\n * **WARNING**: Only use this with observables you *know* will complete. If the source\n * observable does not complete, you will end up with a promise that is hung up, and\n * potentially all of the state of an async function hanging out in memory. To avoid\n * this situation, look into adding something like {@link timeout}, {@link take},\n * {@link takeWhile}, or {@link takeUntil} amongst others.\n *\n * ## Example\n *\n * Wait for the last value from a stream and emit it from a promise in\n * an async function\n *\n * ```ts\n * import { interval, take, lastValueFrom } from 'rxjs';\n *\n * async function execute() {\n *   const source$ = interval(2000).pipe(take(10));\n *   const finalNumber = await lastValueFrom(source$);\n *   console.log(`The final number is ${ finalNumber }`);\n * }\n *\n * execute();\n *\n * // Expected output:\n * // 'The final number is 9'\n * ```\n *\n * @see {@link firstValueFrom}\n *\n * @param source the observable to convert to a promise\n * @param config a configuration object to define the `defaultValue` to use if the source completes without emitting a value\n */\nexport function lastValueFrom<T, D>(source: Observable<T>, config?: LastValueFromConfig<D>): Promise<T | D> {\n  const hasConfig = typeof config === 'object';\n  return new Promise<T | D>((resolve, reject) => {\n    let _hasValue = false;\n    let _value: T;\n    source.subscribe({\n      next: (value) => {\n        _value = value;\n        _hasValue = true;\n      },\n      error: reject,\n      complete: () => {\n        if (_hasValue) {\n          resolve(_value);\n        } else if (hasConfig) {\n          resolve(config!.defaultValue);\n        } else {\n          reject(new EmptyError());\n        }\n      },\n    });\n  });\n}\n","import { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * The specified function will also be called when the subscriber explicitly unsubscribes.\n *\n * ## Examples\n *\n * Execute callback function when the observable completes\n *\n * ```ts\n * import { interval, take, finalize } from 'rxjs';\n *\n * // emit value in sequence every 1 second\n * const source = interval(1000);\n * const example = source.pipe(\n *   take(5), //take only the first 5 values\n *   finalize(() => console.log('Sequence complete')) // Execute when the observable completes\n * );\n * const subscribe = example.subscribe(val => console.log(val));\n *\n * // results:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * // 'Sequence complete'\n * ```\n *\n * Execute callback function when the subscriber explicitly unsubscribes\n *\n * ```ts\n * import { interval, finalize, tap, noop, timer } from 'rxjs';\n *\n * const source = interval(100).pipe(\n *   finalize(() => console.log('[finalize] Called')),\n *   tap({\n *     next: () => console.log('[next] Called'),\n *     error: () => console.log('[error] Not called'),\n *     complete: () => console.log('[tap complete] Not called')\n *   })\n * );\n *\n * const sub = source.subscribe({\n *   next: x => console.log(x),\n *   error: noop,\n *   complete: () => console.log('[complete] Not called')\n * });\n *\n * timer(150).subscribe(() => sub.unsubscribe());\n *\n * // results:\n * // '[next] Called'\n * // 0\n * // '[finalize] Called'\n * ```\n *\n * @param {function} callback Function to be called when source terminates.\n * @return A function that returns an Observable that mirrors the source, but\n * will call the specified function on termination.\n */\nexport function finalize<T>(callback: () => void): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    // TODO: This try/finally was only added for `useDeprecatedSynchronousErrorHandling`.\n    // REMOVE THIS WHEN THAT HOT GARBAGE IS REMOVED IN V8.\n    try {\n      source.subscribe(subscriber);\n    } finally {\n      subscriber.add(callback);\n    }\n  });\n}\n","import { finalize, lastValueFrom } from 'rxjs';\n\nimport {\n  ErrorDialogOptions,\n  KeyValuePair,\n  MerchantCallback,\n  PaymentMethod,\n} from '../data';\nimport { SubmitPayment } from '../feature';\nimport { SubmitCompletePayment } from '../feature';\nimport { OpfSdkApi } from '../opf-sdk.api';\nimport { LibInfo } from './lib-info';\n\nexport interface GlobalOpfPaymentMethods {\n  getRedirectParams?(): Array<KeyValuePair>;\n  submit?(options: {\n    cartId: string;\n    additionalData: Array<KeyValuePair>;\n    submitSuccess: MerchantCallback;\n    submitPending: MerchantCallback;\n    submitFailure: MerchantCallback;\n    paymentMethod: PaymentMethod;\n  }): Promise<boolean>;\n  submitComplete?(options: {\n    cartId: string;\n    additionalData: Array<KeyValuePair>;\n    submitSuccess: MerchantCallback;\n    submitPending: MerchantCallback;\n    submitFailure: MerchantCallback;\n  }): Promise<boolean>;\n  submitCompleteRedirect?(options: {\n    cartId: string;\n    additionalData: Array<KeyValuePair>;\n    submitSuccess: MerchantCallback;\n    submitPending: MerchantCallback;\n    submitFailure: MerchantCallback;\n  }): Promise<boolean>;\n  throwPaymentError?(errorOptions?: ErrorDialogOptions): void;\n  startLoadIndicator?(): void;\n  stopLoadIndicator?(): void;\n  scriptReady?(scriptIdentifier: string): void;\n}\n\nexport class OpfGlobalPayService {\n  private readonly _opfSdkApi: OpfSdkApi;\n\n  constructor(opfSdkApi: OpfSdkApi) {\n    this._opfSdkApi = opfSdkApi;\n  }\n\n  registerGlobalFunctions(paymentSessionId?: string): void {\n    this.registerSubmit(paymentSessionId);\n    this.registerSubmitComplete(paymentSessionId);\n    this.registerSubmitCompleteRedirect(paymentSessionId);\n    this.registerStartLoadIndicator();\n    this.registerStopLoadIndicator();\n  }\n\n  registerGlobalFunctionsRedirectParams(paramsMap: Array<KeyValuePair>): void {\n    this.registerGetRedirectParams(paramsMap);\n  }\n\n  protected registerSubmit(paymentSessionId?: string): void {\n    LibInfo.getGlobalPaymentCheckout().submit = ({\n      cartId,\n      additionalData,\n      submitSuccess = (): void => {\n        // this is intentional\n      },\n      submitPending = (): void => {\n        // this is intentional\n      },\n      submitFailure = (): void => {\n        // this is intentional\n      },\n      paymentMethod,\n    }: {\n      cartId: string;\n      additionalData: Array<KeyValuePair>;\n      submitSuccess: MerchantCallback;\n      submitPending: MerchantCallback;\n      submitFailure: MerchantCallback;\n      paymentMethod: PaymentMethod;\n    }): Promise<boolean> => {\n      this._opfSdkApi.startUiIndicator();\n      const callbackArray: [\n        MerchantCallback,\n        MerchantCallback,\n        MerchantCallback,\n      ] = [submitSuccess, submitPending, submitFailure];\n\n      const submitPayment = new SubmitPayment(this._opfSdkApi);\n      return lastValueFrom(\n        submitPayment\n          .submitPayment({\n            additionalData,\n            paymentSessionId,\n            cartId,\n            callbackArray,\n            paymentMethod,\n            returnPath: undefined,\n          })\n          .pipe(\n            finalize(() => {\n              if (this._opfSdkApi.isUiIndicatorActive()) {\n                this._opfSdkApi.stopUiIndicator();\n              }\n            })\n          )\n      );\n    };\n  }\n\n  protected registerSubmitComplete(paymentSessionId?: string): void {\n    LibInfo.getGlobalPaymentCheckout().submitComplete = ({\n      cartId,\n      additionalData,\n      submitSuccess = (): void => {\n        // this is intentional\n      },\n      submitPending = (): void => {\n        // this is intentional\n      },\n      submitFailure = (): void => {\n        // this is intentional\n      },\n    }: {\n      cartId: string;\n      additionalData: Array<KeyValuePair>;\n      submitSuccess: MerchantCallback;\n      submitPending: MerchantCallback;\n      submitFailure: MerchantCallback;\n    }): Promise<boolean> => {\n      this._opfSdkApi.startUiIndicator();\n      const callbackArray: [\n        MerchantCallback,\n        MerchantCallback,\n        MerchantCallback,\n      ] = [submitSuccess, submitPending, submitFailure];\n\n      const submitCompletePayment = new SubmitCompletePayment(this._opfSdkApi);\n      return lastValueFrom(\n        submitCompletePayment\n          .submitCompletePayment({\n            additionalData,\n            paymentSessionId,\n            cartId,\n            callbackArray,\n            returnPath: undefined,\n          })\n          .pipe(\n            finalize(() => {\n              if (this._opfSdkApi.isUiIndicatorActive()) {\n                this._opfSdkApi.stopUiIndicator();\n              }\n            })\n          )\n      );\n    };\n  }\n\n  protected registerSubmitCompleteRedirect(paymentSessionId?: string): void {\n    LibInfo.getGlobalPaymentRedirect().submitCompleteRedirect = ({\n      cartId,\n      additionalData,\n      submitSuccess = (): void => {\n        // this is intentional\n      },\n      submitPending = (): void => {\n        // this is intentional\n      },\n      submitFailure = (): void => {\n        // this is intentional\n      },\n      returnPath,\n    }: {\n      cartId: string;\n      additionalData: Array<KeyValuePair>;\n      submitSuccess: MerchantCallback;\n      submitPending: MerchantCallback;\n      submitFailure: MerchantCallback;\n      returnPath: string | undefined;\n    }): Promise<boolean> => {\n      this._opfSdkApi.startUiIndicator();\n      const callbackArray: [\n        MerchantCallback,\n        MerchantCallback,\n        MerchantCallback,\n      ] = [submitSuccess, submitPending, submitFailure];\n\n      const submitCompletePayment = new SubmitCompletePayment(this._opfSdkApi);\n      return lastValueFrom(\n        submitCompletePayment\n          .submitCompletePayment({\n            additionalData,\n            paymentSessionId,\n            cartId,\n            callbackArray,\n            returnPath,\n          })\n          .pipe(\n            finalize(() => {\n              if (this._opfSdkApi.isUiIndicatorActive()) {\n                this._opfSdkApi.stopUiIndicator();\n              }\n            })\n          )\n      );\n    };\n  }\n\n  protected registerStartLoadIndicator(): void {\n    LibInfo.getGlobalPaymentCheckout().startLoadIndicator = (): void => {\n      this._opfSdkApi.startUiIndicator();\n    };\n  }\n\n  protected registerStopLoadIndicator(): void {\n    LibInfo.getGlobalPaymentCheckout().stopLoadIndicator = (): void => {\n      this._opfSdkApi.stopUiIndicator();\n    };\n  }\n\n  protected registerGetRedirectParams(\n    paramsMap: Array<KeyValuePair> = []\n  ): void {\n    LibInfo.getGlobalPaymentRedirect().getRedirectParams = () =>\n      paramsMap.map((p) => {\n        return { key: p.key, value: p.value };\n      });\n  }\n}\n","import { Constant } from './common/constant';\nimport { LibInfo } from './common/lib-info';\nimport { Logger } from './common/lib-logger';\nimport { OpfGlobalPayService } from './common/opf-global';\nimport { CommonCallback, CommonConfig } from './config';\nimport {\n  AccessCodeCallback,\n  CartIdCallback,\n  FailureRedirectionCallback,\n  IsUiIndicatorActive,\n  OrderPlacementCallback,\n  StartUiIndicator,\n  StopUiIndicator,\n  SuccessRedirectionCallback,\n  UserIdCallback,\n} from './data';\n\nexport class OpfSdkApi {\n  private static readonly NAME = 'OpfSdkApi';\n  private readonly _logger: Logger;\n  private _opfConfigService: CommonConfig | undefined;\n\n  private _accessCodeCallback: AccessCodeCallback | undefined;\n  private _orderPlacementCallback: OrderPlacementCallback | undefined;\n  private _successRedirectionCallback: SuccessRedirectionCallback | undefined;\n  private _failureRedirectionCallback: FailureRedirectionCallback | undefined;\n  private _cartIdCallback: CartIdCallback | undefined;\n  private _userIdCallback: UserIdCallback | undefined;\n  private _isUiIndicatorActive: IsUiIndicatorActive | undefined;\n  private _startUiIndicator: StartUiIndicator | undefined;\n  private _stopUiIndicator: StopUiIndicator | undefined;\n\n  constructor() {\n    this._logger = new Logger(OpfSdkApi.NAME);\n    LibInfo.setGlobalData();\n    this._logger.info(Constant.LIB_TEXTS.OPF_SDK_INITIALIZED);\n  }\n\n  async initialize(\n    opfConfigService: CommonConfig,\n    opfCallback: CommonCallback\n  ): Promise<boolean> {\n    this._opfConfigService = opfConfigService;\n    this._accessCodeCallback = opfCallback.accessCodeCallback;\n    this._orderPlacementCallback = opfCallback.orderPlacementCallback;\n    this._successRedirectionCallback = opfCallback.successRedirectionCallback;\n    this._failureRedirectionCallback = opfCallback.failureRedirectionCallback;\n    this._cartIdCallback = opfCallback.cartIdCallback;\n    this._userIdCallback = opfCallback.userIdCallback;\n    this._isUiIndicatorActive = opfCallback.isUiIndicatorActive;\n    this._startUiIndicator = opfCallback.startUiIndicator;\n    this._stopUiIndicator = opfCallback.stopUiIndicator;\n    return true;\n  }\n\n  async registerGlobalFunctions(paymentSessionId?: string): Promise<void> {\n    const opfGlobal = new OpfGlobalPayService(this);\n    opfGlobal.registerGlobalFunctions(paymentSessionId);\n  }\n\n  getCommonConfig(): CommonConfig {\n    if (!this._opfConfigService) {\n      this._logger.error(Constant.LIB_TEXTS.OPF_CFG_NOT_INITIALIZED);\n      throw new Error(Constant.LIB_TEXTS.OPF_CFG_NOT_INITIALIZED);\n    }\n    return this._opfConfigService;\n  }\n\n  getAccessCodeCallback(): AccessCodeCallback {\n    if (!this._accessCodeCallback) {\n      this._logger.error(Constant.LIB_TEXTS.CALLBACK_NOT_INITIALIZED);\n      throw new Error(Constant.LIB_TEXTS.CALLBACK_NOT_INITIALIZED);\n    }\n    return this._accessCodeCallback;\n  }\n\n  getOrderPlacementCallback(): OrderPlacementCallback {\n    if (!this._orderPlacementCallback) {\n      this._logger.error(Constant.LIB_TEXTS.CALLBACK_NOT_INITIALIZED);\n      throw new Error(Constant.LIB_TEXTS.CALLBACK_NOT_INITIALIZED);\n    }\n    return this._orderPlacementCallback;\n  }\n\n  getSuccessRedirectionCallback(): SuccessRedirectionCallback {\n    if (!this._successRedirectionCallback) {\n      this._logger.error(Constant.LIB_TEXTS.CALLBACK_NOT_INITIALIZED);\n      throw new Error(Constant.LIB_TEXTS.CALLBACK_NOT_INITIALIZED);\n    }\n    return this._successRedirectionCallback;\n  }\n\n  getFailureRedirectionCallback(): FailureRedirectionCallback {\n    if (!this._failureRedirectionCallback) {\n      this._logger.error(Constant.LIB_TEXTS.CALLBACK_NOT_INITIALIZED);\n      throw new Error(Constant.LIB_TEXTS.CALLBACK_NOT_INITIALIZED);\n    }\n    return this._failureRedirectionCallback;\n  }\n\n  getCartIdCallback(): CartIdCallback {\n    if (!this._cartIdCallback) {\n      this._logger.error(Constant.LIB_TEXTS.CALLBACK_NOT_INITIALIZED);\n      throw new Error(Constant.LIB_TEXTS.CALLBACK_NOT_INITIALIZED);\n    }\n    return this._cartIdCallback;\n  }\n\n  getUserIdCallback(): UserIdCallback {\n    if (!this._userIdCallback) {\n      this._logger.error(Constant.LIB_TEXTS.CALLBACK_NOT_INITIALIZED);\n      throw new Error(Constant.LIB_TEXTS.CALLBACK_NOT_INITIALIZED);\n    }\n    return this._userIdCallback;\n  }\n\n  isUiIndicatorActive(): boolean {\n    if (!this._isUiIndicatorActive) {\n      this._logger.error(Constant.LIB_TEXTS.CALLBACK_NOT_INITIALIZED);\n      throw new Error(Constant.LIB_TEXTS.CALLBACK_NOT_INITIALIZED);\n    }\n    return this._isUiIndicatorActive();\n  }\n\n  startUiIndicator(): void {\n    if (!this._startUiIndicator) {\n      this._logger.error(Constant.LIB_TEXTS.CALLBACK_NOT_INITIALIZED);\n      throw new Error(Constant.LIB_TEXTS.CALLBACK_NOT_INITIALIZED);\n    }\n    this._startUiIndicator();\n  }\n\n  stopUiIndicator(): void {\n    if (!this._stopUiIndicator) {\n      this._logger.error(Constant.LIB_TEXTS.CALLBACK_NOT_INITIALIZED);\n      throw new Error(Constant.LIB_TEXTS.CALLBACK_NOT_INITIALIZED);\n    }\n    this._stopUiIndicator();\n  }\n}\n"],"names":["root","factory","exports","module","define","amd","a","i","globalThis","noop","undefinedType","isIE","window","navigator","test","userAgent","logMethods","_loggersByName","defaultLogger","bindMethod","obj","methodName","method","bind","Function","prototype","call","e","apply","arguments","traceForIE","console","log","trace","replaceLoggingMethods","level","this","getLevel","length","methodFactory","name","debug","levels","SILENT","enableLoggingWhenConsoleArrives","defaultMethodFactory","_level","_loggerName","undefined","realMethod","Logger","inheritedLevel","defaultLevel","userLevel","self","storageKey","getPersistedLevel","storedLevel","localStorage","ignore","cookie","document","cookieName","encodeURIComponent","location","indexOf","exec","slice","normalizeLevel","input","toUpperCase","TypeError","setLevel","persist","levelNum","levelName","persistLevelIfPossible","setDefaultLevel","resetLevel","removeItem","clearPersistedLevel","enableAll","TRACE","disableAll","rebuild","childName","initialLevel","getLogger","logger","_log","noConflict","getLoggers","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","definition","key","o","Object","defineProperty","enumerable","get","prop","hasOwnProperty","r","Symbol","toStringTag","value","_fileName","_debugMode","constructor","fileName","_setLogLevel","message","_getMessage","info","warn","error","logError","setDebugMode","debugMode","Date","CommonConfig","static","_logger","_baseSiteId","_ccv2BaseUrl","_opfBaseUrl","_commerceCloudPublicKey","_defaultAuthorizationErrorRetriesCount","NAME","baseSiteId","ccv2BaseUrl","opfBaseUrl","commerceCloudPublicKey","defaultAuthorizationErrorRetriesCount","CommonCallback","_accessCodeCallback","_orderPlacementCallback","_successRedirectionCallback","_failureRedirectionCallback","_cartIdCallback","_userIdCallback","_isUiIndicatorActive","_startUiIndicator","_stopUiIndicator","accessCodeCallback","orderPlacementCallback","successRedirectionCallback","failureRedirectionCallback","cartIdCallback","userIdCallback","isUiIndicatorActive","startUiIndicator","stopUiIndicator","defaultErrorDialogOptions","messageKey","confirmKey","extendStatics","b","setPrototypeOf","__proto__","Array","p","__extends","String","__","create","__generator","thisArg","body","f","y","t","_","label","sent","trys","ops","g","Iterator","next","verb","iterator","v","op","done","pop","push","step","__values","s","m","__read","ar","__spreadArray","to","from","pack","l","concat","__await","isFunction","createErrorClass","createImpl","ctorFunc","instance","Error","stack","SuppressedError","UnsubscriptionError","_super","errors","map","err","toString","join","arrRemove","arr","item","index","splice","initialTeardown","closed","_parentage","_finalizers","unsubscribe","isArray","remove","initialFinalizer","finalizer","execFinalizer","add","teardown","Subscription","_hasParent","_addParent","parent","includes","_removeParent","EMPTY","empty","isSubscription","config","timeoutProvider","setTimeout","handler","timeout","delegate","args","clearTimeout","handle","reportUnhandledError","COMPLETE_NOTIFICATION","createNotification","kind","context","destination","isStopped","EMPTY_OBSERVER","complete","SafeSubscriber","handleStoppedNotification","nextNotification","_next","_error","_complete","_bind","fn","partialObserver","handleUnhandledError","observerOrNext","ConsumerObserver","Subscriber","errorThrown","notification","subscriber","onStoppedNotification","observable","identity","x","subscribe","_subscribe","lift","operator","Observable","source","isObserver","cb","isRoot","errorContext","_trySubscribe","sink","forEach","promiseCtor","getPromiseCtor","resolve","reject","pipe","fns","operations","reduce","prev","toPromise","Promise","getPrototypeOf","objectProto","getKeys","isArrayLike","isPromise","then","isInteropObservable","isAsyncIterable","asyncIterator","createInvalidObservableTypeError","isIterable","readableStreamLikeToAsyncGenerator","readableStream","_arguments","generator","q","AsyncIterator","resume","fulfill","settle","shift","reader","getReader","read","releaseLock","isReadableStreamLike","innerFrom","obs","array","promise","fromAsyncIterable","iterable","asyncIterable","P","fulfilled","rejected","result","catch","executeSchedule","parentSubscription","scheduler","work","delay","repeat","scheduleSubscription","schedule","operate","init","hasLift","liftedSource","createOperatorSubscriber","onNext","onComplete","onError","onFinalize","OperatorSubscriber","shouldUnsubscribe","observeOn","subscribeOn","scheduleAsyncIterable","scheduleObservable","scheduleArray","schedulePromise","return","scheduleIterable","scheduleReadableStreamLike","scheduled","project","isScheduler","last","popScheduler","combineLatest","resultSelector","popResultSelector","keys","argsArgArrayOrObject","observables","valueTransform","maybeSchedule","values","active","remainingFirstValues","hasFirstValue","combineLatestInit","createObject","callOrApply","execute","subscription","of","mergeMap","concurrent","ii","buffer","isComplete","checkComplete","outerNext","doInnerSub","innerComplete","innerValue","bufferedValue","mergeInternals","concatMap","tap","tapObserver","isUnsub","finalize","catchError","selector","handledResult","innerSub","syncUnsub","throwError","errorOrErrorFactory","errorFactory","state","intervalProvider","setInterval","clearInterval","pending","id","recycleAsyncId","requestAsyncId","_id","flush","_scheduler","_execute","_delay","errorValue","errored","actions","Action","dateTimestampProvider","now","schedulerActionCtor","Scheduler","SchedulerAction","_active","action","AsyncAction","timer","dueTime","intervalOrScheduler","intervalDuration","due","isNaN","backOff","options","shouldRetry","maxTries","source$","configOrCount","count","Infinity","resetOnSuccess","soFar","subscribeForRetry","notifier","retry","attemptError","currentRetry","Constant","kindOf","cache","thing","str","toLowerCase","kindOfTest","type","typeOfTest","isUndefined","isArrayBuffer","isString","isNumber","isObject","isPlainObject","val","isDate","isFile","isBlob","isFileList","isURLSearchParams","isReadableStream","isRequest","isResponse","isHeaders","allOwnKeys","getOwnPropertyNames","len","findKey","_key","_global","global","isContextDefined","isTypedArray","TypedArray","Uint8Array","isHTMLForm","isRegExp","reduceDescriptors","reducer","descriptors","getOwnPropertyDescriptors","reducedDescriptors","descriptor","ret","defineProperties","ALPHA","DIGIT","ALPHABET","ALPHA_DIGIT","isAsyncFn","_setImmediate","setImmediateSupported","setImmediate","postMessageSupported","postMessage","token","Math","random","callbacks","addEventListener","data","asap","queueMicrotask","process","nextTick","isBuffer","isFormData","FormData","append","isArrayBufferView","ArrayBuffer","isView","isBoolean","isStream","merge","caseless","assignValue","targetKey","extend","trim","replace","stripBOM","content","charCodeAt","inherits","superConstructor","props","assign","toFlatObject","sourceObj","destObj","filter","propFilter","merged","endsWith","searchString","position","lastIndex","toArray","forEachEntry","pair","matchAll","regExp","matches","hasOwnProp","freezeMethods","writable","set","toObjectSet","arrayOrString","delimiter","split","toCamelCase","p1","p2","toFiniteNumber","defaultValue","Number","isFinite","generateString","size","alphabet","isSpecCompliantForm","toJSONObject","visit","target","reducedValue","isThenable","AxiosError","code","request","response","captureStackTrace","status","utils","toJSON","description","number","lineNumber","columnNumber","customProps","axiosError","cause","isVisitable","removeBrackets","renderKey","path","dots","predicates","formData","metaTokens","indexes","option","visitor","defaultVisitor","useBlob","Blob","convertValue","toISOString","Buffer","JSON","stringify","some","isFlatArray","el","exposedHelpers","build","encode","charMap","match","AxiosURLSearchParams","params","_pairs","encoder","_encode","buildURL","url","serializeFn","serialize","serializedParams","hashmarkIndex","handlers","use","synchronous","runWhen","eject","clear","h","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","isBrowser","classes","URLSearchParams","protocols","hasBrowserEnv","_navigator","hasStandardBrowserEnv","product","hasStandardBrowserWebWorkerEnv","WorkerGlobalScope","importScripts","origin","href","buildPath","isNumericKey","isLast","arrayToObject","entries","parsePropPath","defaults","transitional","adapter","transformRequest","headers","contentType","getContentType","hasJSONContentType","isObjectPayload","setContentType","platform","helpers","isNode","toURLEncodedForm","formSerializer","_FormData","env","rawValue","parse","stringifySafely","transformResponse","JSONRequested","responseType","strictJSONParsing","ERR_BAD_RESPONSE","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","ignoreDuplicateOf","$internals","normalizeHeader","header","normalizeValue","matchHeaderValue","isHeaderNameFilter","AxiosHeaders","valueOrRewrite","rewrite","setHeader","_value","_header","_rewrite","lHeader","setHeaders","rawHeaders","parsed","line","substring","parseHeaders","parser","tokens","tokensRE","parseTokens","has","matcher","deleted","deleteHeader","normalize","format","normalized","w","char","formatHeader","targets","asStrings","first","computed","accessor","accessors","defineAccessor","accessorName","arg1","arg2","arg3","configurable","buildAccessors","mapped","headerValue","transformData","isCancel","__CANCEL__","CanceledError","ERR_CANCELED","ERR_BAD_REQUEST","floor","progressEventReducer","listener","isDownloadStream","freq","bytesNotified","_speedometer","samplesCount","min","bytes","timestamps","firstSampleTS","head","tail","chunkLength","startedAt","bytesCount","passed","round","lastArgs","timestamp","threshold","invoke","loaded","total","lengthComputable","progressBytes","rate","progress","estimated","event","progressEventDecorator","throttled","asyncDecorator","msie","urlParsingNode","createElement","originURL","resolveURL","setAttribute","protocol","host","search","hash","hostname","port","pathname","charAt","requestURL","write","expires","domain","secure","toGMTString","RegExp","decodeURIComponent","buildFullPath","baseURL","requestedURL","relativeURL","combineURLs","headersToObject","mergeConfig","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","paramsSerializer","timeoutMessage","withCredentials","withXSRFToken","onUploadProgress","onDownloadProgress","decompress","beforeRedirect","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding","configValue","newConfig","auth","btoa","username","password","unescape","Boolean","isURLSameOrigin","xsrfValue","cookies","XMLHttpRequest","_config","resolveConfig","requestData","requestHeaders","onCanceled","uploadThrottled","downloadThrottled","flushUpload","flushDownload","signal","removeEventListener","onloadend","responseHeaders","getAllResponseHeaders","responseText","statusText","open","onreadystatechange","readyState","responseURL","onabort","ECONNABORTED","onerror","ERR_NETWORK","ontimeout","timeoutErrorMessage","ETIMEDOUT","setRequestHeader","upload","cancel","abort","aborted","parseProtocol","send","signals","controller","AbortController","reason","streamChunk","chunk","chunkSize","byteLength","end","pos","trackStream","stream","onProgress","onFinish","async","readStream","readBytes","_onFinish","ReadableStream","pull","close","loadedBytes","enqueue","highWaterMark","isFetchSupported","fetch","Request","Response","isReadableStreamSupported","encodeText","TextEncoder","arrayBuffer","supportsRequestStream","duplexAccessed","hasContentType","duplex","supportsResponseStream","resolvers","res","ERR_NOT_SUPPORT","fetchOptions","composedSignal","toAbortSignal","requestContentLength","getContentLength","_request","getBodyLength","resolveBodyLength","contentTypeHeader","isCredentialsSupported","credentials","isStreamResponse","responseContentLength","responseData","knownAdapters","http","xhr","renderReason","isResolvedHandle","adapters","nameOrAdapter","rejectedReasons","reasons","throwIfCancellationRequested","throwIfRequested","dispatchRequest","validators","deprecatedWarnings","validator","version","formatMessage","opt","desc","opts","ERR_DEPRECATED","assertOptions","schema","allowUnknown","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","Axios","instanceConfig","interceptors","configOrUrl","dummy","boolean","function","contextHeaders","requestInterceptorChain","synchronousRequestInterceptors","interceptor","unshift","responseInterceptorChain","chain","onFulfilled","onRejected","getUri","generateHTTPMethod","isForm","CancelToken","executor","resolvePromise","_listeners","onfulfilled","_resolve","c","HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Ok","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","axios","createInstance","defaultConfig","VERSION","toFormData","Cancel","all","promises","spread","callback","isAxiosError","payload","formToJSON","getAdapter","default","isAuthorizationError","handlePayError","returnPath","payError","errorType","handleBadRequestError","CallType","SdkHttpUtil","axiosInstance","configService","OPF","endpoint","attributes","buildUrl","post","put","delete","urlParams","templateString","templateVariables","encodeVariable","variableLabel","placeholder","SubmitPayment","_window","_commonConfig","opfsdk","getCommonConfig","getAccessCodeCallback","getOrderPlacementCallback","getSuccessRedirectionCallback","getFailureRedirectionCallback","submitPayment","submitInput","paymentMethod","cartId","additionalData","paymentSessionId","encryptedToken","submitRequest","channel","browserInfo","nativeWindow","acceptHeader","colorDepth","screen","javaEnabled","javaScriptEnabled","language","screenHeight","height","screenWidth","width","originUrl","timeZoneOffset","getTimezoneOffset","accessCode","otpKey","callSubmitPayment","paymentResponseHandler","callbackArray","order","submitSuccess","submitPending","submitFailure","HTTP_KEY","OPF_CC_PUBLIC_KEY_HEADER","OPF_CC_ACCESS_CODE_HEADER","OPF_ENDPOINTS","SUBMIT","_headerWithNoLanguage","accept","SubmitCompletePayment","submitCompletePayment","submitCompleteInput","submitCompleteRequest","callSubmitCompletePayment","_headerWithContentLanguage","SUBMIT_COMPLETE","LibInfo","getBuildInfo","LIB_TEXTS","LIB_NAME","LIB_VERSION","getBuildInfoString","getGlobalBuildInfo","globalInfoValue","getGlobalContextValue","GLOBAL","PAYMENTS","INFO","sdk","setGlobalData","ensureGlobalContext","CHECKOUT","REDIRECT","getGlobalPaymentCheckout","getGlobalPaymentRedirect","removeGlobalData","Opf","payments","firstLevel","secondLevel","createdFirstLevel","EmptyError","lastValueFrom","hasConfig","_hasValue","OpfGlobalPayService","_opfSdkApi","opfSdkApi","registerGlobalFunctions","registerSubmit","registerSubmitComplete","registerSubmitCompleteRedirect","registerStartLoadIndicator","registerStopLoadIndicator","registerGlobalFunctionsRedirectParams","paramsMap","registerGetRedirectParams","submit","submitComplete","submitCompleteRedirect","startLoadIndicator","stopLoadIndicator","getRedirectParams","OpfSdkApi","_opfConfigService","OPF_SDK_INITIALIZED","initialize","opfConfigService","opfCallback","OPF_CFG_NOT_INITIALIZED","CALLBACK_NOT_INITIALIZED","getCartIdCallback","getUserIdCallback"],"sourceRoot":""}